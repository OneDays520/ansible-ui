{"remainingRequest":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/thread-loader/dist/cjs.js!/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/babel-loader/lib/index.js!/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/eslint-loader/index.js??ref--13-0!/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/src/components/ItemFormBase.js","dependencies":[{"path":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/src/components/ItemFormBase.js","mtime":1638779901599},{"path":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/src/components/ItemFormBase.js"],"names":["axios","getErrorMessage","props","itemId","Number","String","projectId","needSave","Boolean","needReset","data","item","formValid","formError","formSaving","created","loadData","computed","isNew","watch","val","save","reset","methods","$refs","form","resetValidation","getItemsUrl","Error","getSingleItemUrl","beforeSave","afterSave","afterLoadData","getNewItem","method","url","responseType","getRequestOptions","validate","$emit","project_id","action"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,aAAhC;AAEA;;;;;;;;;;;;;;;;;;;;;;AAqBA,eAAe;AACbC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE,CAACC,MAAD,EAASC,MAAT,CADH;AAELC,IAAAA,SAAS,EAAE,CAACF,MAAD,EAASC,MAAT,CAFN;AAGLE,IAAAA,QAAQ,EAAEC,OAHL;AAGc;AACnBC,IAAAA,SAAS,EAAED,OAJN,CAIe;;AAJf,GADM;AAQbE,EAAAA,IARa,kBAQN;AACL,WAAO;AACLC,MAAAA,IAAI,EAAE,IADD;AAELC,MAAAA,SAAS,EAAE,KAFN;AAGLC,MAAAA,SAAS,EAAE,IAHN;AAILC,MAAAA,UAAU,EAAE;AAJP,KAAP;AAMD,GAfY;AAiBPC,EAAAA,OAjBO,qBAiBG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACR,KAAI,CAACC,QAAL,EADQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEf,GAnBY;AAqBbC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KADQ,mBACA;AACN,aAAO,KAAKf,MAAL,KAAgB,KAAvB;AACD;AAHO,GArBG;AA2BbgB,EAAAA,KAAK,EAAE;AACCZ,IAAAA,QADD,oBACUa,GADV,EACe;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACdA,GADc;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAEV,MAAI,CAACC,IAAL,EAFU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAInB,KALI;AAMCZ,IAAAA,SAND,qBAMWW,GANX,EAMgB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACfA,GADe;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAEX,MAAI,CAACE,KAAL,EAFW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIpB;AAVI,GA3BM;AAwCbC,EAAAA,OAAO,EAAE;AACDD,IAAAA,KADC,mBACO;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACZ,gBAAA,MAAI,CAACX,IAAL,GAAY,IAAZ;AACA,gBAAA,MAAI,CAACE,SAAL,GAAiB,IAAjB;;AACA,oBAAI,MAAI,CAACW,KAAL,CAAWC,IAAf,EAAqB;AACnB,kBAAA,MAAI,CAACD,KAAL,CAAWC,IAAX,CAAgBC,eAAhB;AACD;;AALW;AAAA,uBAMN,MAAI,CAACV,QAAL,EANM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOb,KARM;AAUPW,IAAAA,WAVO,yBAUO;AACZ,YAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN,CADY,CACwB;AACrC,KAZM;AAcPC,IAAAA,gBAdO,8BAcY;AACjB,YAAM,IAAID,KAAJ,CAAU,iBAAV,CAAN,CADiB,CACmB;AACrC,KAhBM;AAkBPE,IAAAA,UAlBO,wBAkBM,CAEZ,CApBM;AAsBPC,IAAAA,SAtBO,uBAsBK,CAEX,CAxBM;AA0BPC,IAAAA,aA1BO,2BA0BS,CAEf,CA5BM;AA8BPC,IAAAA,UA9BO,wBA8BM;AACX,aAAO,EAAP;AACD,KAhCM;AAkCDjB,IAAAA,QAlCC,sBAkCU;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACX,MAAI,CAACE,KADM;AAAA;AAAA;AAAA;;AAEb,gBAAA,MAAI,CAACP,IAAL,GAAY,MAAI,CAACsB,UAAL,EAAZ;AAFa;AAAA;;AAAA;AAAA;AAAA,uBAIMjC,KAAK,CAAC;AACvBkC,kBAAAA,MAAM,EAAE,KADe;AAEvBC,kBAAAA,GAAG,EAAE,MAAI,CAACN,gBAAL,EAFkB;AAGvBO,kBAAAA,YAAY,EAAE;AAHS,iBAAD,CAJX;;AAAA;AAIb,gBAAA,MAAI,CAACzB,IAJQ,kBAQTD,IARS;;AAAA;AAAA;AAAA,uBAWT,MAAI,CAACsB,aAAL,EAXS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYhB,KA9CM;;AAgDP;;;;;;;;;;;;;;AAcAK,IAAAA,iBA9DO,+BA8Da;AAClB,aAAO,EAAP;AACD,KAhEM;;AAkEP;;;;AAIMhB,IAAAA,IAtEC,kBAsEM;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,gBAAA,MAAI,CAACR,SAAL,GAAiB,IAAjB;;AADW,oBAGN,MAAI,CAACW,KAAL,CAAWC,IAAX,CAAgBa,QAAhB,EAHM;AAAA;AAAA;AAAA;;AAIT,gBAAA,MAAI,CAACC,KAAL,CAAW,OAAX,EAAoB,EAApB;;AAJS,kDAKF,IALE;;AAAA;AAQX,gBAAA,MAAI,CAACzB,UAAL,GAAkB,IAAlB;AARW;AAAA;AAAA,uBAYH,MAAI,CAACgB,UAAL,EAZG;;AAAA;AAAA;AAAA,uBAcK9B,KAAK;AACjBkC,kBAAAA,MAAM,EAAE,MAAI,CAAChB,KAAL,GAAa,MAAb,GAAsB,KADb;AAEjBiB,kBAAAA,GAAG,EAAE,MAAI,CAACjB,KAAL,GACD,MAAI,CAACS,WAAL,EADC,GAED,MAAI,CAACE,gBAAL,EAJa;AAKjBO,kBAAAA,YAAY,EAAE,MALG;AAMjB1B,kBAAAA,IAAI,kCACC,MAAI,CAACC,IADN;AAEF6B,oBAAAA,UAAU,EAAE,MAAI,CAAClC;AAFf;AANa,mBAUb,MAAI,CAAC+B,iBAAL,EAVa,EAdV;;AAAA;AAcT1B,gBAAAA,IAdS,kBAyBLD,IAzBK;AAAA;AAAA,uBA2BH,MAAI,CAACqB,SAAL,CAAepB,IAAf,CA3BG;;AAAA;AA6BT,gBAAA,MAAI,CAAC4B,KAAL,CAAW,MAAX,EAAmB;AACjB5B,kBAAAA,IAAI,EAAEA,IAAI,IAAI,MAAI,CAACA,IADF;AAEjB8B,kBAAAA,MAAM,EAAE,MAAI,CAACvB,KAAL,GAAa,KAAb,GAAqB;AAFZ,iBAAnB;;AA7BS;AAAA;;AAAA;AAAA;AAAA;AAkCT,gBAAA,MAAI,CAACL,SAAL,GAAiBZ,eAAe,cAAhC;;AACA,gBAAA,MAAI,CAACsC,KAAL,CAAW,OAAX,EAAoB,EAApB;;AAnCS;AAAA;AAqCT,gBAAA,MAAI,CAACzB,UAAL,GAAkB,KAAlB;AArCS;;AAAA;AAAA,kDAwCJH,IAAI,IAAI,MAAI,CAACA,IAxCT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyCZ;AA/GM;AAxCI,CAAf","sourcesContent":["import axios from 'axios';\nimport { getErrorMessage } from '@/lib/error';\n\n/**\n * Most of Semaphore entities (keys, environments, etc) have similar REST API for\n * access and manipulation.\n * This class presents mixin for creating editing form for such entities.\n * This class should be used as mixin in Vue-template.\n *\n * Simplest example: KeyForm.vue. It demonstrate all you need to understand how it works.\n *\n * You must provide next required properties to use this mixin:\n *\n * * itemId\n * * projectId\n *\n * Your template must have <v-form ref=\"form\">...</v-form>.\n *\n * You must provide next methods in your template:\n *\n * * getItemsUrl() - returns URL for retrieving collection of entities (GET-method).\n * * getSingleItemUrl() - returns URL for retrieving and manipulation of single entity\n *                        (GET, POST, PUT, DELETE methods).\n */\nexport default {\n  props: {\n    itemId: [Number, String],\n    projectId: [Number, String],\n    needSave: Boolean, // flag which signal about user want to save form\n    needReset: Boolean, // flag which signal about user want to reset form\n  },\n\n  data() {\n    return {\n      item: null,\n      formValid: false,\n      formError: null,\n      formSaving: false,\n    };\n  },\n\n  async created() {\n    await this.loadData();\n  },\n\n  computed: {\n    isNew() {\n      return this.itemId === 'new';\n    },\n  },\n\n  watch: {\n    async needSave(val) {\n      if (val) {\n        await this.save();\n      }\n    },\n    async needReset(val) {\n      if (val) {\n        await this.reset();\n      }\n    },\n  },\n\n  methods: {\n    async reset() {\n      this.item = null;\n      this.formError = null;\n      if (this.$refs.form) {\n        this.$refs.form.resetValidation();\n      }\n      await this.loadData();\n    },\n\n    getItemsUrl() {\n      throw new Error('Not implemented'); // must me implemented in template\n    },\n\n    getSingleItemUrl() {\n      throw new Error('Not implemented'); // must me implemented in template\n    },\n\n    beforeSave() {\n\n    },\n\n    afterSave() {\n\n    },\n\n    afterLoadData() {\n\n    },\n\n    getNewItem() {\n      return {};\n    },\n\n    async loadData() {\n      if (this.isNew) {\n        this.item = this.getNewItem();\n      } else {\n        this.item = (await axios({\n          method: 'get',\n          url: this.getSingleItemUrl(),\n          responseType: 'json',\n        })).data;\n      }\n\n      await this.afterLoadData();\n    },\n\n    /**\n     * You add add/override some PUT/POST request options with using this method.\n     * For example, you want to change response type, just override this method:\n     * ```\n     * getRequestOptions() {\n     *   return {\n     *     responseType: 'text'\n     *   }\n     * }\n     * ```\n     *\n     * This method works only for create (POST) and update (PUT) requests.\n     * @returns {Object}\n     */\n    getRequestOptions() {\n      return {};\n    },\n\n    /**\n     * Saves or creates item via API.\n     * @returns {Promise<null>} null if validation didn't pass or user data if user saved.\n     */\n    async save() {\n      this.formError = null;\n\n      if (!this.$refs.form.validate()) {\n        this.$emit('error', {});\n        return null;\n      }\n\n      this.formSaving = true;\n      let item;\n\n      try {\n        await this.beforeSave();\n\n        item = (await axios({\n          method: this.isNew ? 'post' : 'put',\n          url: this.isNew\n            ? this.getItemsUrl()\n            : this.getSingleItemUrl(),\n          responseType: 'json',\n          data: {\n            ...this.item,\n            project_id: this.projectId,\n          },\n          ...(this.getRequestOptions()),\n        })).data;\n\n        await this.afterSave(item);\n\n        this.$emit('save', {\n          item: item || this.item,\n          action: this.isNew ? 'new' : 'edit',\n        });\n      } catch (err) {\n        this.formError = getErrorMessage(err);\n        this.$emit('error', {});\n      } finally {\n        this.formSaving = false;\n      }\n\n      return item || this.item;\n    },\n  },\n};\n"]}]}