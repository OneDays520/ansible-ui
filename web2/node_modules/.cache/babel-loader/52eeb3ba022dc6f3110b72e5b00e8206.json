{"remainingRequest":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/thread-loader/dist/cjs.js!/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/babel-loader/lib/index.js!/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/src/components/KeyForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/src/components/KeyForm.vue","mtime":1638779901600},{"path":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IEl0ZW1Gb3JtQmFzZSBmcm9tICdAL2NvbXBvbmVudHMvSXRlbUZvcm1CYXNlJzsKZXhwb3J0IGRlZmF1bHQgewogIG1peGluczogW0l0ZW1Gb3JtQmFzZV0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGludmVudG9yeVR5cGVzOiBbewogICAgICAgIGlkOiAnc3NoJywKICAgICAgICBuYW1lOiAnU1NIIEtleScKICAgICAgfSwgewogICAgICAgIGlkOiAnbG9naW5fcGFzc3dvcmQnLAogICAgICAgIG5hbWU6ICdMb2dpbiB3aXRoIHBhc3N3b3JkJwogICAgICB9LCB7CiAgICAgICAgaWQ6ICdub25lJywKICAgICAgICBuYW1lOiAnTm9uZScKICAgICAgfV0KICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgY2FuRWRpdFNlY3JldHM6IGZ1bmN0aW9uIGNhbkVkaXRTZWNyZXRzKCkgewogICAgICByZXR1cm4gdGhpcy5pc05ldyB8fCB0aGlzLml0ZW0ub3ZlcnJpZGVfc2VjcmV0OwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgZ2V0TmV3SXRlbTogZnVuY3Rpb24gZ2V0TmV3SXRlbSgpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICBzc2g6IHt9LAogICAgICAgIGxvZ2luX3Bhc3N3b3JkOiB7fQogICAgICB9OwogICAgfSwKICAgIGdldEl0ZW1zVXJsOiBmdW5jdGlvbiBnZXRJdGVtc1VybCgpIHsKICAgICAgcmV0dXJuICIvYXBpL3Byb2plY3QvIi5jb25jYXQodGhpcy5wcm9qZWN0SWQsICIva2V5cyIpOwogICAgfSwKICAgIGdldFNpbmdsZUl0ZW1Vcmw6IGZ1bmN0aW9uIGdldFNpbmdsZUl0ZW1VcmwoKSB7CiAgICAgIHJldHVybiAiL2FwaS9wcm9qZWN0LyIuY29uY2F0KHRoaXMucHJvamVjdElkLCAiL2tleXMvIikuY29uY2F0KHRoaXMuaXRlbUlkKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["KeyForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoFA,OAAA,YAAA,MAAA,2BAAA;AAEA,eAAA;AACA,EAAA,MAAA,EAAA,CAAA,YAAA,CADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,cAAA,EAAA,CAAA;AACA,QAAA,EAAA,EAAA,KADA;AAEA,QAAA,IAAA,EAAA;AAFA,OAAA,EAGA;AACA,QAAA,EAAA,EAAA,gBADA;AAEA,QAAA,IAAA,EAAA;AAFA,OAHA,EAMA;AACA,QAAA,EAAA,EAAA,MADA;AAEA,QAAA,IAAA,EAAA;AAFA,OANA;AADA,KAAA;AAYA,GAfA;AAiBA,EAAA,QAAA,EAAA;AACA,IAAA,cADA,4BACA;AACA,aAAA,KAAA,KAAA,IAAA,KAAA,IAAA,CAAA,eAAA;AACA;AAHA,GAjBA;AAuBA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,wBACA;AACA,aAAA;AACA,QAAA,GAAA,EAAA,EADA;AAEA,QAAA,cAAA,EAAA;AAFA,OAAA;AAIA,KANA;AAQA,IAAA,WARA,yBAQA;AACA,oCAAA,KAAA,SAAA;AACA,KAVA;AAYA,IAAA,gBAZA,8BAYA;AACA,oCAAA,KAAA,SAAA,mBAAA,KAAA,MAAA;AACA;AAdA;AAvBA,CAAA","sourcesContent":["<template>\n  <v-form\n      ref=\"form\"\n      lazy-validation\n      v-model=\"formValid\"\n      v-if=\"item != null\"\n  >\n    <v-alert\n        :value=\"formError\"\n        color=\"error\"\n        class=\"pb-2\"\n    >{{ formError }}\n    </v-alert>\n\n    <v-text-field\n        v-model=\"item.name\"\n        label=\"Key Name\"\n        :rules=\"[v => !!v || 'Name is required']\"\n        required\n        :disabled=\"formSaving\"\n    />\n\n    <v-select\n        v-model=\"item.type\"\n        label=\"Type\"\n        :rules=\"[v => (!!v || !canEditSecrets) || 'Type is required']\"\n        :items=\"inventoryTypes\"\n        item-value=\"id\"\n        item-text=\"name\"\n        :required=\"canEditSecrets\"\n        :disabled=\"formSaving || !canEditSecrets\"\n    />\n\n    <v-text-field\n        v-model=\"item.login_password.passphrase\"\n        label=\"Passphrase (Optional)\"\n        v-if=\"item.type === 'ssh'\"\n        :disabled=\"formSaving || !canEditSecrets\"\n    />\n\n    <v-textarea\n        outlined\n        v-model=\"item.ssh.private_key\"\n        label=\"Private Key\"\n        :disabled=\"formSaving || !canEditSecrets\"\n        :rules=\"[v => !!v || 'Private Key is required']\"\n        v-if=\"item.type === 'ssh'\"\n    />\n\n    <v-text-field\n        v-model=\"item.login_password.login\"\n        label=\"Login (Optional)\"\n        v-if=\"item.type === 'login_password'\"\n        :disabled=\"formSaving || !canEditSecrets\"\n    />\n\n    <v-text-field\n        v-model=\"item.login_password.password\"\n        label=\"Password\"\n        :rules=\"[v => (!!v || !canEditSecrets) || 'Password is required']\"\n        v-if=\"item.type === 'login_password'\"\n        :required=\"canEditSecrets\"\n        :disabled=\"formSaving || !canEditSecrets\"\n        autocomplete=\"new-password\"\n    />\n\n    <v-checkbox\n        v-model=\"item.override_secret\"\n        label=\"Override\"\n        v-if=\"!isNew\"\n    />\n\n    <v-alert\n        dense\n        text\n        type=\"info\"\n        v-if=\"item.type === 'none'\"\n    >\n      Use this type of key for HTTPS repositories and for\n      playbooks which use non-SSH connections.\n    </v-alert>\n  </v-form>\n</template>\n<script>\nimport ItemFormBase from '@/components/ItemFormBase';\n\nexport default {\n  mixins: [ItemFormBase],\n  data() {\n    return {\n      inventoryTypes: [{\n        id: 'ssh',\n        name: 'SSH Key',\n      }, {\n        id: 'login_password',\n        name: 'Login with password',\n      }, {\n        id: 'none',\n        name: 'None',\n      }],\n    };\n  },\n\n  computed: {\n    canEditSecrets() {\n      return this.isNew || this.item.override_secret;\n    },\n  },\n\n  methods: {\n    getNewItem() {\n      return {\n        ssh: {},\n        login_password: {},\n      };\n    },\n\n    getItemsUrl() {\n      return `/api/project/${this.projectId}/keys`;\n    },\n\n    getSingleItemUrl() {\n      return `/api/project/${this.projectId}/keys/${this.itemId}`;\n    },\n  },\n};\n</script>\n"],"sourceRoot":"src/components"}]}