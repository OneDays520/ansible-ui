{"remainingRequest":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/thread-loader/dist/cjs.js!/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/babel-loader/lib/index.js!/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/src/components/TaskForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/src/components/TaskForm.vue","mtime":1638779901600},{"path":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL2x4L2dvL3NyYy9naXRodWIuY29tL2Fuc2libGUtc2VtYXBob3JlL3NlbWFwaG9yZS93ZWIyL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IEl0ZW1Gb3JtQmFzZSBmcm9tICdAL2NvbXBvbmVudHMvSXRlbUZvcm1CYXNlJzsKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKZXhwb3J0IGRlZmF1bHQgewogIG1peGluczogW0l0ZW1Gb3JtQmFzZV0sCiAgcHJvcHM6IHsKICAgIHRlbXBsYXRlSWQ6IE51bWJlciwKICAgIGNvbW1pdEhhc2g6IFN0cmluZywKICAgIGNvbW1pdE1lc3NhZ2U6IFN0cmluZywKICAgIGJ1aWxkVGFzazogT2JqZWN0CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdGVtcGxhdGU6IG51bGwsCiAgICAgIGJ1aWxkVGFza3M6IG51bGwsCiAgICAgIGNvbW1pdEF2YWlsYWJsZTogbnVsbAogICAgfTsKICB9LAogIHdhdGNoOiB7CiAgICBuZWVkUmVzZXQ6IGZ1bmN0aW9uIG5lZWRSZXNldCh2YWwpIHsKICAgICAgaWYgKHZhbCkgewogICAgICAgIHRoaXMuaXRlbS50ZW1wbGF0ZV9pZCA9IHRoaXMudGVtcGxhdGVJZDsKICAgICAgfQogICAgfSwKICAgIHRlbXBsYXRlSWQ6IGZ1bmN0aW9uIHRlbXBsYXRlSWQodmFsKSB7CiAgICAgIHRoaXMuaXRlbS50ZW1wbGF0ZV9pZCA9IHZhbDsKICAgIH0sCiAgICBjb21taXRIYXNoOiBmdW5jdGlvbiBjb21taXRIYXNoKHZhbCkgewogICAgICB0aGlzLml0ZW0uY29tbWl0X2hhc2ggPSB2YWw7CiAgICAgIHRoaXMuY29tbWl0QXZhaWxhYmxlID0gdGhpcy5pdGVtLmNvbW1pdF9oYXNoICE9IG51bGw7CiAgICB9LAogICAgdmVyc2lvbjogZnVuY3Rpb24gdmVyc2lvbih2YWwpIHsKICAgICAgdGhpcy5pdGVtLnZlcnNpb24gPSB2YWw7CiAgICB9LAogICAgY29tbWl0QXZhaWxhYmxlOiBmdW5jdGlvbiBjb21taXRBdmFpbGFibGUodmFsKSB7CiAgICAgIHRoaXMuaXRlbS5jb21taXRfaGFzaCA9IHZhbCA/IHRoaXMuY29tbWl0SGFzaCA6IG51bGw7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBpc0xvYWRlZDogZnVuY3Rpb24gaXNMb2FkZWQoKSB7CiAgICAgIHJldHVybiB0aGlzLml0ZW0gIT0gbnVsbCAmJiB0aGlzLnRlbXBsYXRlICE9IG51bGwgJiYgdGhpcy5idWlsZFRhc2tzICE9IG51bGw7CiAgICB9LAogICAgYWZ0ZXJMb2FkRGF0YTogZnVuY3Rpb24gYWZ0ZXJMb2FkRGF0YSgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX3RoaXMuaXRlbS50ZW1wbGF0ZV9pZCA9IF90aGlzLnRlbXBsYXRlSWQ7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiBheGlvcyh7CiAgICAgICAgICAgICAgICAgIGtleXM6ICdnZXQnLAogICAgICAgICAgICAgICAgICB1cmw6ICIvYXBpL3Byb2plY3QvIi5jb25jYXQoX3RoaXMucHJvamVjdElkLCAiL3RlbXBsYXRlcy8iKS5jb25jYXQoX3RoaXMudGVtcGxhdGVJZCksCiAgICAgICAgICAgICAgICAgIHJlc3BvbnNlVHlwZTogJ2pzb24nCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgX3RoaXMudGVtcGxhdGUgPSBfY29udGV4dC5zZW50LmRhdGE7CgogICAgICAgICAgICAgICAgaWYgKCEoX3RoaXMudGVtcGxhdGUudHlwZSA9PT0gJ2RlcGxveScpKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxMDsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDc7CiAgICAgICAgICAgICAgICByZXR1cm4gYXhpb3MoewogICAgICAgICAgICAgICAgICBrZXlzOiAnZ2V0JywKICAgICAgICAgICAgICAgICAgdXJsOiAiL2FwaS9wcm9qZWN0LyIuY29uY2F0KF90aGlzLnByb2plY3RJZCwgIi90ZW1wbGF0ZXMvIikuY29uY2F0KF90aGlzLnRlbXBsYXRlLmJ1aWxkX3RlbXBsYXRlX2lkLCAiL3Rhc2tzIiksCiAgICAgICAgICAgICAgICAgIHJlc3BvbnNlVHlwZTogJ2pzb24nCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dC5zZW50LmRhdGEuZmlsdGVyKGZ1bmN0aW9uICh0YXNrKSB7CiAgICAgICAgICAgICAgICAgIHJldHVybiB0YXNrLnZlcnNpb24gIT0gbnVsbCAmJiB0YXNrLnN0YXR1cyA9PT0gJ3N1Y2Nlc3MnOwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTE7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gW107CgogICAgICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgICAgICBfdGhpcy5idWlsZFRhc2tzID0gX2NvbnRleHQudDA7CgogICAgICAgICAgICAgICAgaWYgKF90aGlzLmJ1aWxkVGFza3MubGVuZ3RoID4gMCkgewogICAgICAgICAgICAgICAgICBfdGhpcy5pdGVtLmJ1aWxkX3Rhc2tfaWQgPSBfdGhpcy5idWlsZF90YXNrID8gX3RoaXMuYnVpbGRfdGFzay5pZCA6IF90aGlzLmJ1aWxkVGFza3NbMF0uaWQ7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgX3RoaXMuY29tbWl0QXZhaWxhYmxlID0gX3RoaXMuY29tbWl0SGFzaCAhPSBudWxsOwoKICAgICAgICAgICAgICBjYXNlIDE0OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGdldEl0ZW1zVXJsOiBmdW5jdGlvbiBnZXRJdGVtc1VybCgpIHsKICAgICAgcmV0dXJuICIvYXBpL3Byb2plY3QvIi5jb25jYXQodGhpcy5wcm9qZWN0SWQsICIvdGFza3MiKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["TaskForm.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-form\n      ref=\"form\"\n      lazy-validation\n      v-model=\"formValid\"\n      v-if=\"isLoaded()\"\n  >\n    <v-alert\n        :value=\"formError\"\n        color=\"error\"\n        class=\"pb-2\"\n    >{{ formError }}\n    </v-alert>\n\n    <v-alert\n        color=\"blue\"\n        dark\n        icon=\"mdi-source-fork\"\n        dismissible\n        v-model=\"commitAvailable\"\n        prominent\n    >\n      <div\n          style=\"font-weight: bold;\"\n      >{{ commitHash ? commitHash.substr(0, 10) : '' }}\n      </div>\n      <div v-if=\"commitMessage\">{{ commitMessage }}</div>\n    </v-alert>\n\n    <v-select\n        v-if=\"template.type === 'deploy'\"\n        v-model=\"item.build_task_id\"\n        label=\"Build Version\"\n        :items=\"buildTasks\"\n        item-value=\"id\"\n        :item-text=\"(itm) => itm.version + (itm.message ? ' â€” ' + itm.message : '')\"\n        :rules=\"[v => !!v || 'Build Version is required']\"\n        required\n        :disabled=\"formSaving\"\n    />\n\n    <v-text-field\n        v-model=\"item.message\"\n        label=\"Message (Optional)\"\n        :disabled=\"formSaving\"\n    />\n\n    <v-row no-gutters>\n      <v-col>\n        <v-checkbox\n            v-model=\"item.debug\"\n            label=\"Debug\"\n        ></v-checkbox>\n      </v-col>\n      <v-col>\n        <v-checkbox\n            v-model=\"item.dry_run\"\n            label=\"Dry Run\"\n        ></v-checkbox>\n      </v-col>\n    </v-row>\n\n  </v-form>\n</template>\n<script>\nimport ItemFormBase from '@/components/ItemFormBase';\nimport axios from 'axios';\n\nexport default {\n  mixins: [ItemFormBase],\n  props: {\n    templateId: Number,\n    commitHash: String,\n    commitMessage: String,\n    buildTask: Object,\n  },\n  data() {\n    return {\n      template: null,\n      buildTasks: null,\n      commitAvailable: null,\n    };\n  },\n  watch: {\n    needReset(val) {\n      if (val) {\n        this.item.template_id = this.templateId;\n      }\n    },\n\n    templateId(val) {\n      this.item.template_id = val;\n    },\n\n    commitHash(val) {\n      this.item.commit_hash = val;\n      this.commitAvailable = this.item.commit_hash != null;\n    },\n\n    version(val) {\n      this.item.version = val;\n    },\n\n    commitAvailable(val) {\n      this.item.commit_hash = val ? this.commitHash : null;\n    },\n  },\n\n  methods: {\n    isLoaded() {\n      return this.item != null\n          && this.template != null\n          && this.buildTasks != null;\n    },\n\n    async afterLoadData() {\n      this.item.template_id = this.templateId;\n\n      this.template = (await axios({\n        keys: 'get',\n        url: `/api/project/${this.projectId}/templates/${this.templateId}`,\n        responseType: 'json',\n      })).data;\n\n      this.buildTasks = this.template.type === 'deploy' ? (await axios({\n        keys: 'get',\n        url: `/api/project/${this.projectId}/templates/${this.template.build_template_id}/tasks`,\n        responseType: 'json',\n      })).data.filter((task) => task.version != null && task.status === 'success') : [];\n\n      if (this.buildTasks.length > 0) {\n        this.item.build_task_id = this.build_task ? this.build_task.id : this.buildTasks[0].id;\n      }\n\n      this.commitAvailable = this.commitHash != null;\n    },\n\n    getItemsUrl() {\n      return `/api/project/${this.projectId}/tasks`;\n    },\n  },\n};\n</script>\n"],"sourceRoot":"src/components"}]}