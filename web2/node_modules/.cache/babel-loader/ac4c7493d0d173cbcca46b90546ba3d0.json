{"remainingRequest":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/thread-loader/dist/cjs.js!/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/babel-loader/lib/index.js!/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/src/components/TaskLogView.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/src/components/TaskLogView.vue","mtime":1638779901601},{"path":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yIjsKaW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL2x4L2dvL3NyYy9naXRodWIuY29tL2Fuc2libGUtc2VtYXBob3JlL3NlbWFwaG9yZS93ZWIyL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL2x4L2dvL3NyYy9naXRodWIuY29tL2Fuc2libGUtc2VtYXBob3JlL3NlbWFwaG9yZS93ZWIyL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKaW1wb3J0IFRhc2tTdGF0dXMgZnJvbSAnQC9jb21wb25lbnRzL1Rhc2tTdGF0dXMudnVlJzsKaW1wb3J0IHNvY2tldCBmcm9tICdAL3NvY2tldCc7CmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBUYXNrU3RhdHVzOiBUYXNrU3RhdHVzCiAgfSwKICBwcm9wczogewogICAgaXRlbUlkOiBOdW1iZXIsCiAgICBwcm9qZWN0SWQ6IE51bWJlcgogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGl0ZW06IHt9LAogICAgICBvdXRwdXQ6IFtdLAogICAgICB1c2VyOiB7fQogICAgfTsKICB9LAogIHdhdGNoOiB7CiAgICBpdGVtSWQ6IGZ1bmN0aW9uIGl0ZW1JZCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX3RoaXMucmVzZXQoKTsKCiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpcy5sb2FkRGF0YSgpOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgcHJvamVjdElkOiBmdW5jdGlvbiBwcm9qZWN0SWQoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF90aGlzMi5yZXNldCgpOwoKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpczIubG9hZERhdGEoKTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyKTsKICAgICAgfSkpKCk7CiAgICB9CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoKSB7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgc29ja2V0LmFkZExpc3RlbmVyKGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMzLm9uV2Vic29ja2V0RGF0YVJlY2VpdmVkKGRhdGEpOwogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gX3RoaXMzLmxvYWREYXRhKCk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMyk7CiAgICB9KSkoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHN0b3BUYXNrOiBmdW5jdGlvbiBzdG9wVGFzaygpIHsKICAgICAgdmFyIF90aGlzNCA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNCgpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTQkKF9jb250ZXh0NCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDQucHJldiA9IF9jb250ZXh0NC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zKHsKICAgICAgICAgICAgICAgICAgbWV0aG9kOiAncG9zdCcsCiAgICAgICAgICAgICAgICAgIHVybDogIi9hcGkvcHJvamVjdC8iLmNvbmNhdChfdGhpczQucHJvamVjdElkLCAiL3Rhc2tzLyIpLmNvbmNhdChfdGhpczQuaXRlbUlkLCAiL3N0b3AiKSwKICAgICAgICAgICAgICAgICAgcmVzcG9uc2VUeXBlOiAnanNvbicKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTQpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICByZXNldDogZnVuY3Rpb24gcmVzZXQoKSB7CiAgICAgIHRoaXMuaXRlbSA9IHt9OwogICAgICB0aGlzLm91dHB1dCA9IFtdOwogICAgICB0aGlzLnVzZXIgPSB7fTsKICAgIH0sCiAgICBvbldlYnNvY2tldERhdGFSZWNlaXZlZDogZnVuY3Rpb24gb25XZWJzb2NrZXREYXRhUmVjZWl2ZWQoZGF0YSkgewogICAgICB2YXIgX3RoaXM1ID0gdGhpczsKCiAgICAgIGlmIChkYXRhLnByb2plY3RfaWQgIT09IHRoaXMucHJvamVjdElkIHx8IGRhdGEudGFza19pZCAhPT0gdGhpcy5pdGVtSWQpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIHN3aXRjaCAoZGF0YS50eXBlKSB7CiAgICAgICAgY2FzZSAndXBkYXRlJzoKICAgICAgICAgIE9iamVjdC5hc3NpZ24odGhpcy5pdGVtLCBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIGRhdGEpLCB7fSwgewogICAgICAgICAgICB0eXBlOiB1bmRlZmluZWQKICAgICAgICAgIH0pKTsKICAgICAgICAgIGJyZWFrOwoKICAgICAgICBjYXNlICdsb2cnOgogICAgICAgICAgdGhpcy5vdXRwdXQucHVzaChkYXRhKTsKICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgICAgICBfdGhpczUuJHJlZnMub3V0cHV0LnNjcm9sbFRvcCA9IF90aGlzNS4kcmVmcy5vdXRwdXQuc2Nyb2xsSGVpZ2h0OwogICAgICAgICAgfSwgMjAwKTsKICAgICAgICAgIGJyZWFrOwoKICAgICAgICBkZWZhdWx0OgogICAgICAgICAgYnJlYWs7CiAgICAgIH0KICAgIH0sCiAgICBsb2FkRGF0YTogZnVuY3Rpb24gbG9hZERhdGEoKSB7CiAgICAgIHZhciBfdGhpczYgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTUoKSB7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU1JChfY29udGV4dDUpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ1LnByZXYgPSBfY29udGV4dDUubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0NS5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBheGlvcyh7CiAgICAgICAgICAgICAgICAgIG1ldGhvZDogJ2dldCcsCiAgICAgICAgICAgICAgICAgIHVybDogIi9hcGkvcHJvamVjdC8iLmNvbmNhdChfdGhpczYucHJvamVjdElkLCAiL3Rhc2tzLyIpLmNvbmNhdChfdGhpczYuaXRlbUlkKSwKICAgICAgICAgICAgICAgICAgcmVzcG9uc2VUeXBlOiAnanNvbicKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICBfdGhpczYuaXRlbSA9IF9jb250ZXh0NS5zZW50LmRhdGE7CiAgICAgICAgICAgICAgICBfY29udGV4dDUubmV4dCA9IDU7CiAgICAgICAgICAgICAgICByZXR1cm4gYXhpb3MoewogICAgICAgICAgICAgICAgICBtZXRob2Q6ICdnZXQnLAogICAgICAgICAgICAgICAgICB1cmw6ICIvYXBpL3Byb2plY3QvIi5jb25jYXQoX3RoaXM2LnByb2plY3RJZCwgIi90YXNrcy8iKS5jb25jYXQoX3RoaXM2Lml0ZW1JZCwgIi9vdXRwdXQiKSwKICAgICAgICAgICAgICAgICAgcmVzcG9uc2VUeXBlOiAnanNvbicKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICBfdGhpczYub3V0cHV0ID0gX2NvbnRleHQ1LnNlbnQuZGF0YTsKICAgICAgICAgICAgICAgIF9jb250ZXh0NS5uZXh0ID0gODsKICAgICAgICAgICAgICAgIHJldHVybiBheGlvcyh7CiAgICAgICAgICAgICAgICAgIG1ldGhvZDogJ2dldCcsCiAgICAgICAgICAgICAgICAgIHVybDogIi9hcGkvdXNlcnMvIi5jb25jYXQoX3RoaXM2Lml0ZW0udXNlcl9pZCksCiAgICAgICAgICAgICAgICAgIHJlc3BvbnNlVHlwZTogJ2pzb24nCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICAgICAgX3RoaXM2LnVzZXIgPSBfY29udGV4dDUuc2VudC5kYXRhOwoKICAgICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDUuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTUpOwogICAgICB9KSkoKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["TaskLogView.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"task-log-view\" :class=\"{'task-log-view--with-message': item.message}\">\n    <v-alert\n        type=\"info\"\n        text\n        v-if=\"item.message\"\n    >{{ item.message }}\n    </v-alert>\n\n    <v-container class=\"pa-0 mb-2\">\n      <v-row no-gutters>\n        <v-col>\n          <v-list two-line subheader class=\"pa-0\">\n            <v-list-item class=\"pa-0\">\n              <v-list-item-content>\n                <div>\n                  <TaskStatus :status=\"item.status\"/>\n                </div>\n              </v-list-item-content>\n            </v-list-item>\n          </v-list>\n        </v-col>\n        <v-col>\n          <v-list two-line subheader class=\"pa-0\">\n            <v-list-item class=\"pa-0\">\n              <v-list-item-content>\n                <v-list-item-title>Author</v-list-item-title>\n                <v-list-item-subtitle>{{ user.name }}</v-list-item-subtitle>\n              </v-list-item-content>\n            </v-list-item>\n          </v-list>\n        </v-col>\n        <v-col>\n          <v-list two-line subheader class=\"pa-0\">\n            <v-list-item class=\"pa-0\">\n              <v-list-item-content>\n                <v-list-item-title>Started</v-list-item-title>\n                <v-list-item-subtitle>\n                  {{ item.start | formatDate }}\n                </v-list-item-subtitle>\n              </v-list-item-content>\n            </v-list-item>\n          </v-list>\n        </v-col>\n        <v-col>\n          <v-list-item class=\"pa-0\">\n            <v-list-item-content>\n              <v-list-item-title>Duration</v-list-item-title>\n              <v-list-item-subtitle>\n                {{ [item.start, item.end] | formatMilliseconds }}\n              </v-list-item-subtitle>\n            </v-list-item-content>\n          </v-list-item>\n        </v-col>\n      </v-row>\n    </v-container>\n    <div class=\"task-log-records\" ref=\"output\">\n      <div class=\"task-log-records__record\" v-for=\"record in output\" :key=\"record.id\">\n        <div class=\"task-log-records__time\">\n          {{ record.time | formatTime }}\n        </div>\n        <div class=\"task-log-records__output\">{{ record.output }}</div>\n      </div>\n    </div>\n\n    <v-btn\n        color=\"error\"\n        style=\"position: absolute; bottom: 10px; right: 10px;\"\n        v-if=\"item.status === 'running' || item.status === 'waiting'\"\n        @click=\"stopTask()\"\n    >\n      Stop\n    </v-btn>\n  </div>\n</template>\n\n<style lang=\"scss\">\n\n@import '~vuetify/src/styles/settings/_variables';\n\n.task-log-view {\n}\n\n.task-log-records {\n  background: black;\n  color: white;\n  height: calc(100vh - 250px);\n  overflow: auto;\n  font-family: monospace;\n  margin: 0 -24px;\n  padding: 5px 10px;\n}\n\n.task-log-view--with-message .task-log-records {\n  height: calc(100vh - 300px);\n}\n\n.task-log-records__record {\n  display: flex;\n  flex-direction: row;\n  justify-content: left;\n}\n\n.task-log-records__time {\n  width: 120px;\n  min-width: 120px;\n}\n\n.task-log-records__output {\n  width: 100%;\n}\n\n@media #{map-get($display-breakpoints, 'sm-and-down')} {\n  .task-log-records {\n    height: calc(100vh - 340px);\n  }\n\n  .task-log-view--with-message .task-log-records {\n    height: calc(100vh - 370px);\n  }\n}\n</style>\n<script>\nimport axios from 'axios';\nimport TaskStatus from '@/components/TaskStatus.vue';\nimport socket from '@/socket';\n\nexport default {\n  components: { TaskStatus },\n  props: {\n    itemId: Number,\n    projectId: Number,\n  },\n  data() {\n    return {\n      item: {},\n      output: [],\n      user: {},\n    };\n  },\n  watch: {\n    async itemId() {\n      this.reset();\n      await this.loadData();\n    },\n\n    async projectId() {\n      this.reset();\n      await this.loadData();\n    },\n  },\n  async created() {\n    socket.addListener((data) => this.onWebsocketDataReceived(data));\n    await this.loadData();\n  },\n\n  methods: {\n    async stopTask() {\n      await axios({\n        method: 'post',\n        url: `/api/project/${this.projectId}/tasks/${this.itemId}/stop`,\n        responseType: 'json',\n      });\n    },\n\n    reset() {\n      this.item = {};\n      this.output = [];\n      this.user = {};\n    },\n\n    onWebsocketDataReceived(data) {\n      if (data.project_id !== this.projectId || data.task_id !== this.itemId) {\n        return;\n      }\n\n      switch (data.type) {\n        case 'update':\n          Object.assign(this.item, {\n            ...data,\n            type: undefined,\n          });\n          break;\n        case 'log':\n          this.output.push(data);\n          setTimeout(() => {\n            this.$refs.output.scrollTop = this.$refs.output.scrollHeight;\n          }, 200);\n          break;\n        default:\n          break;\n      }\n    },\n\n    async loadData() {\n      this.item = (await axios({\n        method: 'get',\n        url: `/api/project/${this.projectId}/tasks/${this.itemId}`,\n        responseType: 'json',\n      })).data;\n\n      this.output = (await axios({\n        method: 'get',\n        url: `/api/project/${this.projectId}/tasks/${this.itemId}/output`,\n        responseType: 'json',\n      })).data;\n\n      this.user = (await axios({\n        method: 'get',\n        url: `/api/users/${this.item.user_id}`,\n        responseType: 'json',\n      })).data;\n    },\n  },\n};\n</script>\n"],"sourceRoot":"src/components"}]}