{"remainingRequest":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/src/components/EditDialog.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/src/components/EditDialog.vue","mtime":1638860012010},{"path":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLml0ZW0tZGlhbG9nLS10b3AgewogIGFsaWduLXNlbGY6IGZsZXgtc3RhcnQ7Cn0KLml0ZW0tZGlhbG9nLS1jZW50ZXIgewp9Cg=="},{"version":3,"sources":["EditDialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDA;AACA;AACA;AACA;AACA","file":"EditDialog.vue","sourceRoot":"src/components","sourcesContent":["<!--\nModal dialog which contains slot \"form\" and two buttons (\"Cancel\" and \"OK\").\nShould be used to wrap forms which need to be displayed in modal dialog.\nCan use used in tandem with ItemFormBase.js. See KeyForm.vue for example.\n-->\n<template xmlns:v-slot=\"http://www.w3.org/1999/XSL/Transform\">\n  <v-dialog\n    v-model=\"dialog\"\n    :max-width=\"maxWidth || 400\"\n    persistent\n    :transition=\"false\"\n    :content-class=\"'item-dialog item-dialog--' + position\"\n  >\n    <v-card>\n      <v-card-title>\n        <slot name=\"title\">{{ title }}</slot>\n      </v-card-title>\n\n      <v-card-text class=\"pb-0\">\n        <slot\n          name=\"form\"\n          :onSave=\"close\"\n          :onError=\"clearFlags\"\n          :needSave=\"needSave\"\n          :needReset=\"needReset\"\n        ></slot>\n      </v-card-text>\n\n      <v-card-actions v-if=\"!hideButtons\">\n        <v-spacer></v-spacer>\n\n        <v-btn\n          color=\"blue darken-1\"\n          text\n          @click=\"close()\"\n        >\n          取消\n        </v-btn>\n\n        <v-btn\n          color=\"blue darken-1\"\n          text\n          @click=\"needSave = true\"\n        >\n          {{ saveButtonText }}\n        </v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n<style lang=\"scss\">\n  .item-dialog--top {\n    align-self: flex-start;\n  }\n  .item-dialog--center {\n  }\n</style>\n<script>\n\nimport EventBus from '@/event-bus';\n\nexport default {\n  props: {\n    position: String,\n    title: String,\n    saveButtonText: String,\n    value: Boolean,\n    maxWidth: Number,\n    eventName: String,\n    hideButtons: Boolean,\n  },\n\n  data() {\n    return {\n      dialog: false,\n      needSave: false,\n      needReset: false,\n    };\n  },\n\n  watch: {\n    async dialog(val) {\n      this.$emit('input', val);\n      this.needReset = val;\n      if (val) {\n        window.addEventListener('keydown', this.handleEscape);\n      } else {\n        window.removeEventListener('keydown', this.handleEscape);\n      }\n    },\n\n    async value(val) {\n      this.dialog = val;\n    },\n  },\n\n  methods: {\n    close(e) {\n      this.dialog = false;\n      this.clearFlags();\n      if (e) {\n        this.$emit('save', e);\n        if (this.eventName) {\n          EventBus.$emit(this.eventName, e);\n        }\n      }\n      this.$emit('close');\n    },\n\n    clearFlags() {\n      this.needSave = false;\n      this.needReset = false;\n    },\n\n    handleEscape(ev) {\n      if (ev.key === 'Escape' && this.dialog !== false) {\n        this.close();\n      }\n    },\n  },\n};\n</script>\n"]}]}