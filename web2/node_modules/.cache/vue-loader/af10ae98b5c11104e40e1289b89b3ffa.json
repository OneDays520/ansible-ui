{"remainingRequest":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/src/components/IndeterminateProgressCircular.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/src/components/IndeterminateProgressCircular.vue","mtime":1638779901599},{"path":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKLmluZGV0ZXJtaW5hdGUtcHJvZ3Jlc3MtY2lyY3VsYXIgewogIC52LXByb2dyZXNzLWNpcmN1bGFyX19vdmVybGF5IHsKICAgIHRyYW5zaXRpb246IDBzICFpbXBvcnRhbnQ7CiAgfQp9Cg=="},{"version":3,"sources":["IndeterminateProgressCircular.vue"],"names":[],"mappings":";;;;;;;;;;;;AAYA;AACA;AACA;AACA;AACA","file":"IndeterminateProgressCircular.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-progress-circular\n    color=\"white\"\n    class=\"indeterminate-progress-circular mr-2\"\n    size=\"20\"\n    width=\"10\"\n    :rotate=\"rotate\"\n    :value=\"value\"\n  >\n  </v-progress-circular>\n</template>\n<style lang=\"scss\">\n  .indeterminate-progress-circular {\n    .v-progress-circular__overlay {\n      transition: 0s !important;\n    }\n  }\n</style>\n<script>\nimport Listenable from '@/lib/Listenable';\n\nclass IndeterminateTimer extends Listenable {\n  constructor() {\n    super();\n    this.direction = 1;\n    this.value = 0;\n    this.rotate = 0;\n  }\n\n  start() {\n    const STEP = 1;\n    const self = this;\n\n    self.valueTimer = setInterval(() => {\n      if (self.direction === 1 && self.value >= 100) {\n        self.direction = -1;\n      } else if (self.direction === -1 && self.value <= 0) {\n        self.direction = 1;\n      }\n      if (self.direction === 1) {\n        self.rotate += STEP;\n        self.value += STEP;\n      } else {\n        self.rotate += STEP * 5;\n        self.value += -STEP;\n      }\n\n      if (self.rotate > 360) {\n        self.rotate %= 360;\n      }\n\n      self.callListeners({\n        value: self.value,\n        rotate: self.rotate,\n      });\n    }, 50);\n  }\n\n  stop() {\n    clearInterval(this.valueTimer);\n  }\n\n  addListener(callback) {\n    if (!this.hasListeners()) {\n      this.start();\n    }\n    return super.addListener(callback);\n  }\n\n  removeListener(id) {\n    super.removeListener(id);\n    if (!this.hasListeners()) {\n      this.stop();\n    }\n  }\n}\n\nconst indeterminateTimer = new IndeterminateTimer();\n\nexport default {\n  data() {\n    return {\n      value: null,\n      rotate: null,\n      listenerId: null,\n    };\n  },\n\n  mounted() {\n    this.value = indeterminateTimer.value;\n    this.rotate = indeterminateTimer.rotate;\n    this.listenerId = indeterminateTimer.addListener(({ value, rotate }) => {\n      this.value = value;\n      this.rotate = rotate;\n    });\n  },\n\n  beforeDestroy() {\n    indeterminateTimer.removeListener(this.listenerId);\n  },\n};\n</script>\n"]}]}