{"remainingRequest":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/src/views/project/Templates.vue?vue&type=template&id=d9a11424&xmlns%3Av-slot=http%3A%2F%2Fwww.w3.org%2F1999%2FXSL%2FTransform&","dependencies":[{"path":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/src/views/project/Templates.vue","mtime":1638859882033},{"path":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxkaXYgdi1pZj0iIWlzTG9hZGVkIj4KICA8di1wcm9ncmVzcy1saW5lYXIKICAgICAgaW5kZXRlcm1pbmF0ZQogICAgICBjb2xvcj0icHJpbWFyeSBkYXJrZW4tMiIKICA+PC92LXByb2dyZXNzLWxpbmVhcj4KPC9kaXY+CjxkaXYgdi1lbHNlPgogIDx2LWRpYWxvZwogICAgICB2LW1vZGVsPSJlZGl0Vmlld3NEaWFsb2ciCiAgICAgIDptYXgtd2lkdGg9IjQwMCIKICAgICAgcGVyc2lzdGVudAogICAgICA6dHJhbnNpdGlvbj0iZmFsc2UiCiAgPgogICAgPHYtY2FyZD4KICAgICAgPHYtY2FyZC10aXRsZT4KICAgICAgICBFZGl0IFZpZXdzCiAgICAgICAgPHYtc3BhY2VyPjwvdi1zcGFjZXI+CiAgICAgICAgPHYtYnRuIGljb24gQGNsaWNrPSJjbG9zZUVkaXRWaWV3RGlhbG9nKCkiPgogICAgICAgICAgPHYtaWNvbj5tZGktY2xvc2U8L3YtaWNvbj4KICAgICAgICA8L3YtYnRuPgogICAgICA8L3YtY2FyZC10aXRsZT4KICAgICAgPHYtY2FyZC10ZXh0PgogICAgICAgIDxFZGl0Vmlld3NGb3JtIDpwcm9qZWN0LWlkPSJwcm9qZWN0SWQiLz4KICAgICAgPC92LWNhcmQtdGV4dD4KICAgIDwvdi1jYXJkPgogIDwvdi1kaWFsb2c+CgogIDxFZGl0RGlhbG9nCiAgICAgIDptYXgtd2lkdGg9IjcwMCIKICAgICAgdi1tb2RlbD0iZWRpdERpYWxvZyIKICAgICAgc2F2ZS1idXR0b24tdGV4dD0i5Yib5bu6IgogICAgICB0aXRsZT0i5paw5qih5p2/IgogICAgICBAc2F2ZT0ibG9hZEl0ZW1zKCkiCiAgPgogICAgPHRlbXBsYXRlIHYtc2xvdDpmb3JtPSJ7IG9uU2F2ZSwgb25FcnJvciwgbmVlZFNhdmUsIG5lZWRSZXNldCB9Ij4KICAgICAgPFRlbXBsYXRlRm9ybQogICAgICAgICAgOnByb2plY3QtaWQ9InByb2plY3RJZCIKICAgICAgICAgIGl0ZW0taWQ9Im5ldyIKICAgICAgICAgIEBzYXZlPSJvblNhdmUiCiAgICAgICAgICBAZXJyb3I9Im9uRXJyb3IiCiAgICAgICAgICA6bmVlZC1zYXZlPSJuZWVkU2F2ZSIKICAgICAgICAgIDpuZWVkLXJlc2V0PSJuZWVkUmVzZXQiCiAgICAgIC8+CiAgICA8L3RlbXBsYXRlPgogIDwvRWRpdERpYWxvZz4KCiAgPEVkaXREaWFsb2cKICAgICAgdi1tb2RlbD0ibmV3VGFza0RpYWxvZyIKICAgICAgOnNhdmUtYnV0dG9uLXRleHQ9IlRFTVBMQVRFX1RZUEVfQUNUSU9OX1RJVExFU1t0ZW1wbGF0ZVR5cGVdIgogICAgICB0aXRsZT0i5paw5Lu75YqhIgogICAgICBAc2F2ZT0ib25UYXNrQ3JlYXRlZCIKICAgICAgQGNsb3NlPSJpdGVtSWQgPSBudWxsIgogID4KICAgIDx0ZW1wbGF0ZSB2LXNsb3Q6dGl0bGU9e30+CiAgICAgIDx2LWljb24gc21hbGwgY2xhc3M9Im1yLTQiPnt7IFRFTVBMQVRFX1RZUEVfSUNPTlNbdGVtcGxhdGVUeXBlXSB9fTwvdi1pY29uPgogICAgICA8c3BhbiBjbGFzcz0iYnJlYWRjcnVtYnNfX2l0ZW0iPnt7IHRlbXBsYXRlQWxpYXMgfX08L3NwYW4+CiAgICAgIDx2LWljb24+bWRpLWNoZXZyb24tcmlnaHQ8L3YtaWNvbj4KICAgICAgPHNwYW4gY2xhc3M9ImJyZWFkY3J1bWJzX19pdGVtIj7mlrDku7vliqE8L3NwYW4+CiAgICA8L3RlbXBsYXRlPgoKICAgIDx0ZW1wbGF0ZSB2LXNsb3Q6Zm9ybT0ieyBvblNhdmUsIG9uRXJyb3IsIG5lZWRTYXZlLCBuZWVkUmVzZXQgfSI+CiAgICAgIDxUYXNrRm9ybQogICAgICAgICAgOnByb2plY3QtaWQ9InByb2plY3RJZCIKICAgICAgICAgIGl0ZW0taWQ9Im5ldyIKICAgICAgICAgIDp0ZW1wbGF0ZS1pZD0iaXRlbUlkIgogICAgICAgICAgQHNhdmU9Im9uU2F2ZSIKICAgICAgICAgIEBlcnJvcj0ib25FcnJvciIKICAgICAgICAgIDpuZWVkLXNhdmU9Im5lZWRTYXZlIgogICAgICAgICAgOm5lZWQtcmVzZXQ9Im5lZWRSZXNldCIKICAgICAgLz4KICAgIDwvdGVtcGxhdGU+CiAgPC9FZGl0RGlhbG9nPgoKICA8di10b29sYmFyIGZsYXQgY29sb3I9IndoaXRlIj4KICAgIDx2LWFwcC1iYXItbmF2LWljb24gQGNsaWNrPSJzaG93RHJhd2VyKCkiPjwvdi1hcHAtYmFyLW5hdi1pY29uPgogICAgPHYtdG9vbGJhci10aXRsZT7ku7vliqHmqKHmnb88L3YtdG9vbGJhci10aXRsZT4KICAgIDx2LXNwYWNlcj48L3Ytc3BhY2VyPgogICAgPHYtYnRuCiAgICAgICAgY29sb3I9InByaW1hcnkiCiAgICAgICAgQGNsaWNrPSJlZGl0SXRlbSgnbmV3JykiCiAgICAgICAgY2xhc3M9Im1yLTEiCiAgICA+5paw5qih5p2/CiAgICA8L3YtYnRuPgoKICAgIDx2LWJ0biBpY29uIEBjbGljaz0ic2V0dGluZ3NTaGVldCA9IHRydWUiPgogICAgICA8di1pY29uPm1kaS1jb2c8L3YtaWNvbj4KICAgIDwvdi1idG4+CiAgPC92LXRvb2xiYXI+CgogIDx2LXRhYnMgc2hvdy1hcnJvd3MgY2xhc3M9InBsLTQiIHYtbW9kZWw9InZpZXdUYWIiPgogICAgPHYtdGFiIDp0bz0iZ2V0Vmlld1VybChudWxsKSIgOmRpc2FibGVkPSJ2aWV3SXRlbXNMb2FkaW5nIj5BbGw8L3YtdGFiPgoKICAgIDx2LXRhYgogICAgICAgIHYtZm9yPSIodmlldykgaW4gdmlld3MiCiAgICAgICAgOmtleT0idmlldy5pZCIKICAgICAgICA6dG89ImdldFZpZXdVcmwodmlldy5pZCkiCiAgICAgICAgOmRpc2FibGVkPSJ2aWV3SXRlbXNMb2FkaW5nIgogICAgPnt7IHZpZXcudGl0bGUgfX0KICAgIDwvdi10YWI+CgogICAgPHYtYnRuIGljb24gY2xhc3M9Im10LTIgbWwtNCIgQGNsaWNrPSJlZGl0Vmlld3NEaWFsb2cgPSB0cnVlIj4KICAgICAgPHYtaWNvbj5tZGktcGVuY2lsPC92LWljb24+CiAgICA8L3YtYnRuPgogIDwvdi10YWJzPgoKICA8di1kYXRhLXRhYmxlCiAgICAgIGhpZGUtZGVmYXVsdC1mb290ZXIKICAgICAgY2xhc3M9Im10LTQgdGVtcGxhdGVzLXRhYmxlIgogICAgICBzaW5nbGUtZXhwYW5kCiAgICAgIHNob3ctZXhwYW5kCiAgICAgIDpoZWFkZXJzPSJmaWx0ZXJlZEhlYWRlcnMiCiAgICAgIDppdGVtcz0iaXRlbXMiCiAgICAgIDppdGVtcy1wZXItcGFnZT0iTnVtYmVyLk1BWF9WQUxVRSIKICAgICAgOmV4cGFuZGVkLnN5bmM9Im9wZW5lZEl0ZW1zIgogICAgICA6c3R5bGU9InsKICAgICAgICBvcGFjaXR5OiB2aWV3SXRlbXNMb2FkaW5nID8gMC4zIDogMSwKICAgICAgfSIKICA+CiAgICA8dGVtcGxhdGUgdi1zbG90Oml0ZW0uYWxpYXM9InsgaXRlbSB9Ij4KICAgICAgPHYtaWNvbiBjbGFzcz0ibXItMyIgc21hbGw+CiAgICAgICAge3sgVEVNUExBVEVfVFlQRV9JQ09OU1tpdGVtLnR5cGVdIH19CiAgICAgIDwvdi1pY29uPgogICAgICA8cm91dGVyLWxpbmsKICAgICAgICAgIDp0bz0idmlld0lkCiAgICAgICAgICAgID8gYC9wcm9qZWN0LyR7cHJvamVjdElkfS92aWV3cy8ke3ZpZXdJZH0vdGVtcGxhdGVzLyR7aXRlbS5pZH1gCiAgICAgICAgICAgIDogYC9wcm9qZWN0LyR7cHJvamVjdElkfS90ZW1wbGF0ZXMvJHtpdGVtLmlkfWAiCiAgICAgID57eyBpdGVtLmFsaWFzIH19PC9yb3V0ZXItbGluaz4KICAgIDwvdGVtcGxhdGU+CgogICAgPHRlbXBsYXRlIHYtc2xvdDppdGVtLnZlcnNpb249InsgaXRlbSB9Ij4KICAgICAgPFRhc2tMaW5rCiAgICAgICAgICB2LWlmPSJpdGVtLmxhc3RfdGFzayAmJiBpdGVtLmxhc3RfdGFzay50cGxfdHlwZSAhPT0gJyciCiAgICAgICAgICA6ZGlzYWJsZWQ9InRydWUiCiAgICAgICAgICA6c3RhdHVzPSJpdGVtLmxhc3RfdGFzay5zdGF0dXMiCgogICAgICAgICAgOnRhc2staWQ9Iml0ZW0ubGFzdF90YXNrLnRwbF90eXBlID09PSAnYnVpbGQnCiAgICAgICAgICAgID8gaXRlbS5sYXN0X3Rhc2suaWQKICAgICAgICAgICAgOiBpdGVtLmxhc3RfdGFzay5idWlsZF90YXNrLmlkIgoKICAgICAgICAgIDpsYWJlbD0iaXRlbS5sYXN0X3Rhc2sudHBsX3R5cGUgPT09ICdidWlsZCcKICAgICAgICAgICAgPyBpdGVtLmxhc3RfdGFzay52ZXJzaW9uCiAgICAgICAgICAgIDogaXRlbS5sYXN0X3Rhc2suYnVpbGRfdGFzay52ZXJzaW9uIgoKICAgICAgICAgIDp0b29sdGlwPSJpdGVtLmxhc3RfdGFzay50cGxfdHlwZSA9PT0gJ2J1aWxkJwogICAgICAgICAgICA/IGl0ZW0ubGFzdF90YXNrLm1lc3NhZ2UKICAgICAgICAgICAgOiBpdGVtLmxhc3RfdGFzay5idWlsZF90YXNrLm1lc3NhZ2UiCiAgICAgIC8+CiAgICAgIDxkaXYgdi1lbHNlPiZtZGFzaDs8L2Rpdj4KICAgIDwvdGVtcGxhdGU+CgogICAgPHRlbXBsYXRlIHYtc2xvdDppdGVtLnN0YXR1cz0ieyBpdGVtIH0iPgogICAgICA8ZGl2IGNsYXNzPSJtdC0yIG1iLTIgZC1mbGV4IiB2LWlmPSJpdGVtLmxhc3RfdGFzayAhPSBudWxsIj4KICAgICAgICA8VGFza1N0YXR1cyA6c3RhdHVzPSJpdGVtLmxhc3RfdGFzay5zdGF0dXMiLz4KICAgICAgPC9kaXY+CiAgICAgIDxkaXYgdi1lbHNlIGNsYXNzPSJtdC0zIG1iLTIgZC1mbGV4IiBzdHlsZT0iY29sb3I6IGdyYXk7Ij5Ob3QgbGF1bmNoZWQ8L2Rpdj4KICAgIDwvdGVtcGxhdGU+CgogICAgPHRlbXBsYXRlIHYtc2xvdDppdGVtLmxhc3RfdGFzaz0ieyBpdGVtIH0iPgogICAgICA8ZGl2IGNsYXNzPSJtdC0yIG1iLTIiIHYtaWY9Iml0ZW0ubGFzdF90YXNrICE9IG51bGwiIHN0eWxlPSJsaW5lLWhlaWdodDogMSI+CiAgICAgICAgPFRhc2tMaW5rCiAgICAgICAgICAgIDp0YXNrLWlkPSJpdGVtLmxhc3RfdGFzay5pZCIKICAgICAgICAgICAgOmxhYmVsPSInIycgKyBpdGVtLmxhc3RfdGFzay5pZCIKICAgICAgICAgICAgOnRvb2x0aXA9Iml0ZW0ubGFzdF90YXNrLm1lc3NhZ2UiCiAgICAgICAgLz4KICAgICAgICA8ZGl2IHN0eWxlPSJjb2xvcjogZ3JheTsgZm9udC1zaXplOiAxNHB4OyI+CiAgICAgICAgICBieSB7eyBpdGVtLmxhc3RfdGFzay51c2VyX25hbWUgfX0ge3sgaXRlbS5sYXN0X3Rhc2suY3JlYXRlZHxmb3JtYXREYXRlIH19CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgPC90ZW1wbGF0ZT4KCiAgICA8dGVtcGxhdGUgdi1zbG90Oml0ZW0uaW52ZW50b3J5X2lkPSJ7IGl0ZW0gfSI+CiAgICAgIHt7IGludmVudG9yeS5maW5kKCh4KSA9PiB4LmlkID09PSBpdGVtLmludmVudG9yeV9pZCkubmFtZSB9fQogICAgPC90ZW1wbGF0ZT4KCiAgICA8dGVtcGxhdGUgdi1zbG90Oml0ZW0uZW52aXJvbm1lbnRfaWQ9InsgaXRlbSB9Ij4KICAgICAge3sgZW52aXJvbm1lbnQuZmluZCgoeCkgPT4geC5pZCA9PT0gaXRlbS5lbnZpcm9ubWVudF9pZCkubmFtZSB9fQogICAgPC90ZW1wbGF0ZT4KCiAgICA8dGVtcGxhdGUgdi1zbG90Oml0ZW0ucmVwb3NpdG9yeV9pZD0ieyBpdGVtIH0iPgogICAgICB7eyByZXBvc2l0b3JpZXMuZmluZCgoeCkgPT4geC5pZCA9PT0gaXRlbS5yZXBvc2l0b3J5X2lkKS5uYW1lIH19CiAgICA8L3RlbXBsYXRlPgoKICAgIDx0ZW1wbGF0ZSB2LXNsb3Q6aXRlbS5hY3Rpb25zPSJ7IGl0ZW0gfSI+CiAgICAgIDx2LWJ0biB0ZXh0IGNvbG9yPSJibGFjayIgY2xhc3M9InBsLTEgcHItMiIgQGNsaWNrPSJjcmVhdGVUYXNrKGl0ZW0uaWQpIj4KICAgICAgICA8di1pY29uIGNsYXNzPSJwci0xIj5tZGktcmVwbGF5PC92LWljb24+CiAgICAgICAge3sgVEVNUExBVEVfVFlQRV9BQ1RJT05fVElUTEVTW2l0ZW0udHlwZV0gfX0KICAgICAgPC92LWJ0bj4KICAgIDwvdGVtcGxhdGU+CgogICAgPHRlbXBsYXRlIHYtc2xvdDpleHBhbmRlZC1pdGVtPSJ7IGhlYWRlcnMsIGl0ZW0gfSI+CiAgICAgIDx0ZAogICAgICAgICAgOmNvbHNwYW49ImhlYWRlcnMubGVuZ3RoIgogICAgICAgICAgdi1pZj0ib3BlbmVkSXRlbXMuc29tZSgodGVtcGxhdGUpID0+IHRlbXBsYXRlLmlkID09PSBpdGVtLmlkKSIKICAgICAgPgogICAgICAgIDxUYXNrTGlzdAogICAgICAgICAgICBzdHlsZT0iYm9yZGVyOiAxcHggc29saWQgbGlnaHRncmF5OyBib3JkZXItcmFkaXVzOiA2cHg7IG1hcmdpbjogMTBweCAwOyIKICAgICAgICAgICAgOnRlbXBsYXRlPSJpdGVtIgogICAgICAgICAgICA6bGltaXQ9IjUiCiAgICAgICAgICAgIDpoaWRlLWZvb3Rlcj0idHJ1ZSIKICAgICAgICAvPgogICAgICA8L3RkPgogICAgPC90ZW1wbGF0ZT4KICA8L3YtZGF0YS10YWJsZT4KCiAgPFRhYmxlU2V0dGluZ3NTaGVldAogICAgICB2LW1vZGVsPSJzZXR0aW5nc1NoZWV0IgogICAgICB0YWJsZS1uYW1lPSJwcm9qZWN0X190ZW1wbGF0ZSIKICAgICAgOmhlYWRlcnM9ImhlYWRlcnMiCiAgICAgIEBjaGFuZ2U9Im9uVGFibGVTZXR0aW5nc0NoYW5nZSIKICAvPgo8L2Rpdj4K"},null]}