{"remainingRequest":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/src/components/TaskStatus.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/src/components/TaskStatus.vue","mtime":1638857308731},{"path":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBJbmRldGVybWluYXRlUHJvZ3Jlc3NDaXJjdWxhciBmcm9tICdAL2NvbXBvbmVudHMvSW5kZXRlcm1pbmF0ZVByb2dyZXNzQ2lyY3VsYXIudnVlJzsKCmNvbnN0IFRhc2tTdGF0dXMgPSBPYmplY3QuZnJlZXplKHsKICBXQUlUSU5HOiAnd2FpdGluZycsCiAgUlVOTklORzogJ3J1bm5pbmcnLAogIFNVQ0NFU1M6ICdzdWNjZXNzJywKICBFUlJPUjogJ2Vycm9yJywKICBTVE9QUElORzogJ3N0b3BwaW5nJywKICBTVE9QUEVEOiAnc3RvcHBlZCcsCn0pOwoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsgSW5kZXRlcm1pbmF0ZVByb2dyZXNzQ2lyY3VsYXIgfSwKICBwcm9wczogewogICAgc3RhdHVzOiBTdHJpbmcsCiAgfSwKCiAgbWV0aG9kczogewogICAgZ2V0U3RhdHVzSWNvbihzdGF0dXMpIHsKICAgICAgc3dpdGNoIChzdGF0dXMpIHsKICAgICAgICBjYXNlIFRhc2tTdGF0dXMuV0FJVElORzoKICAgICAgICAgIHJldHVybiAnbWRpLWFsYXJtJzsKICAgICAgICBjYXNlIFRhc2tTdGF0dXMuUlVOTklORzoKICAgICAgICAgIHJldHVybiAnJzsKICAgICAgICBjYXNlIFRhc2tTdGF0dXMuU1VDQ0VTUzoKICAgICAgICAgIHJldHVybiAnbWRpLWNoZWNrLWNpcmNsZSc7CiAgICAgICAgY2FzZSBUYXNrU3RhdHVzLkVSUk9SOgogICAgICAgICAgcmV0dXJuICdtZGktaW5mb3JtYXRpb24nOwogICAgICAgIGNhc2UgVGFza1N0YXR1cy5TVE9QUElORzoKICAgICAgICAgIHJldHVybiAnbWRpLXN0b3AtY2lyY2xlJzsKICAgICAgICBjYXNlIFRhc2tTdGF0dXMuU1RPUFBFRDoKICAgICAgICAgIHJldHVybiAnbWRpLXN0b3AtY2lyY2xlJzsKICAgICAgICBkZWZhdWx0OgogICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbmtub3duIHRhc2sgc3RhdHVzICR7c3RhdHVzfWApOwogICAgICB9CiAgICB9LAoKICAgIGh1bWFuaXplU3RhdHVzKHN0YXR1cykgewogICAgICBzd2l0Y2ggKHN0YXR1cykgewogICAgICAgIGNhc2UgVGFza1N0YXR1cy5XQUlUSU5HOgogICAgICAgICAgcmV0dXJuICdXYWl0aW5nJzsKICAgICAgICBjYXNlIFRhc2tTdGF0dXMuUlVOTklORzoKICAgICAgICAgIHJldHVybiAnUnVubmluZyc7CiAgICAgICAgY2FzZSBUYXNrU3RhdHVzLlNVQ0NFU1M6CiAgICAgICAgICByZXR1cm4gJ1N1Y2Nlc3MnOwogICAgICAgIGNhc2UgVGFza1N0YXR1cy5FUlJPUjoKICAgICAgICAgIHJldHVybiAnRmFpbGVkJzsKICAgICAgICBjYXNlIFRhc2tTdGF0dXMuU1RPUFBJTkc6CiAgICAgICAgICByZXR1cm4gJ1N0b3BwaW5nLi4uJzsKICAgICAgICBjYXNlIFRhc2tTdGF0dXMuU1RPUFBFRDoKICAgICAgICAgIHJldHVybiAnU3RvcHBlZCc7CiAgICAgICAgZGVmYXVsdDoKICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5rbm93biB0YXNrIHN0YXR1cyAke3N0YXR1c31gKTsKICAgICAgfQogICAgfSwKCiAgICBnZXRTdGF0dXNDb2xvcihzdGF0dXMpIHsKICAgICAgc3dpdGNoIChzdGF0dXMpIHsKICAgICAgICBjYXNlIFRhc2tTdGF0dXMuV0FJVElORzoKICAgICAgICAgIHJldHVybiAnJzsKICAgICAgICBjYXNlIFRhc2tTdGF0dXMuUlVOTklORzoKICAgICAgICAgIHJldHVybiAncHJpbWFyeSc7CiAgICAgICAgY2FzZSBUYXNrU3RhdHVzLlNVQ0NFU1M6CiAgICAgICAgICByZXR1cm4gJ3N1Y2Nlc3MnOwogICAgICAgIGNhc2UgVGFza1N0YXR1cy5FUlJPUjoKICAgICAgICAgIHJldHVybiAnZXJyb3InOwogICAgICAgIGNhc2UgVGFza1N0YXR1cy5TVE9QUElORzoKICAgICAgICAgIHJldHVybiAnJzsKICAgICAgICBjYXNlIFRhc2tTdGF0dXMuU1RPUFBFRDoKICAgICAgICAgIHJldHVybiAnJzsKICAgICAgICBkZWZhdWx0OgogICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbmtub3duIHRhc2sgc3RhdHVzICR7c3RhdHVzfWApOwogICAgICB9CiAgICB9LAogIH0sCn07Cg=="},{"version":3,"sources":["TaskStatus.vue"],"names":[],"mappings":";;;;;;;;AAQA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TaskStatus.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-chip v-if=\"status\" style=\"font-weight: bold;\" :color=\"getStatusColor(status)\">\n    <v-icon v-if=\"status !== 'running'\" left>{{ getStatusIcon(status) }}</v-icon>\n    <IndeterminateProgressCircular v-else style=\"margin-left: -5px;\" />\n    {{ humanizeStatus(status) }}\n  </v-chip>\n</template>\n<script>\nimport IndeterminateProgressCircular from '@/components/IndeterminateProgressCircular.vue';\n\nconst TaskStatus = Object.freeze({\n  WAITING: 'waiting',\n  RUNNING: 'running',\n  SUCCESS: 'success',\n  ERROR: 'error',\n  STOPPING: 'stopping',\n  STOPPED: 'stopped',\n});\n\nexport default {\n  components: { IndeterminateProgressCircular },\n  props: {\n    status: String,\n  },\n\n  methods: {\n    getStatusIcon(status) {\n      switch (status) {\n        case TaskStatus.WAITING:\n          return 'mdi-alarm';\n        case TaskStatus.RUNNING:\n          return '';\n        case TaskStatus.SUCCESS:\n          return 'mdi-check-circle';\n        case TaskStatus.ERROR:\n          return 'mdi-information';\n        case TaskStatus.STOPPING:\n          return 'mdi-stop-circle';\n        case TaskStatus.STOPPED:\n          return 'mdi-stop-circle';\n        default:\n          throw new Error(`Unknown task status ${status}`);\n      }\n    },\n\n    humanizeStatus(status) {\n      switch (status) {\n        case TaskStatus.WAITING:\n          return 'Waiting';\n        case TaskStatus.RUNNING:\n          return 'Running';\n        case TaskStatus.SUCCESS:\n          return 'Success';\n        case TaskStatus.ERROR:\n          return 'Failed';\n        case TaskStatus.STOPPING:\n          return 'Stopping...';\n        case TaskStatus.STOPPED:\n          return 'Stopped';\n        default:\n          throw new Error(`Unknown task status ${status}`);\n      }\n    },\n\n    getStatusColor(status) {\n      switch (status) {\n        case TaskStatus.WAITING:\n          return '';\n        case TaskStatus.RUNNING:\n          return 'primary';\n        case TaskStatus.SUCCESS:\n          return 'success';\n        case TaskStatus.ERROR:\n          return 'error';\n        case TaskStatus.STOPPING:\n          return '';\n        case TaskStatus.STOPPED:\n          return '';\n        default:\n          throw new Error(`Unknown task status ${status}`);\n      }\n    },\n  },\n};\n</script>\n"]}]}