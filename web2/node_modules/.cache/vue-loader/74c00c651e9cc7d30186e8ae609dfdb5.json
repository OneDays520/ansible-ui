{"remainingRequest":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/src/App.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/src/App.vue","mtime":1638930637663},{"path":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi52LWRpYWxvZyA+IC52LWNhcmQgPiAudi1jYXJkX190aXRsZSB7CiAgZmxleC13cmFwOiBub3dyYXA7CiAgb3ZlcmZsb3c6IGhpZGRlbjsKICAmICogewogICAgd2hpdGUtc3BhY2U6IG5vd3JhcDsKICB9Cn0KCi52LWRhdGEtdGFibGUgdGJvZHkgdHIudi1kYXRhLXRhYmxlX19leHBhbmRlZF9fY29udGVudCB7CiAgYm94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50OwoKfQoKLnYtZGF0YS10YWJsZSBhIHsKICB0ZXh0LWRlY29yYXRpb24tbGluZTogbm9uZTsKCiAgJjpob3ZlciB7CiAgICB0ZXh0LWRlY29yYXRpb24tbGluZTogdW5kZXJsaW5lOwogIH0KfQoKLmJyZWFkY3J1bWJzX19pdGVtLS1saW5rIHsKICB0ZXh0LWRlY29yYXRpb24tbGluZTogbm9uZTsKCiAgJjpob3ZlciB7CiAgICB0ZXh0LWRlY29yYXRpb24tbGluZTogdW5kZXJsaW5lOwogIH0KfQoKLmJyZWFkY3J1bWJzX19zZXBhcmF0b3IgewogIHBhZGRpbmc6IDAgMTBweDsKfQoKLmFwcF9fcHJvamVjdC1zZWxlY3RvciB7CiAgaGVpZ2h0OiA2NHB4OwoKICAudi1saXN0LWl0ZW1fX2ljb24gewogICAgbWFyZ2luLXRvcDogMjBweCAhaW1wb3J0YW50OwogIH0KfQoKLmFwcF9fcHJvamVjdC1zZWxlY3Rvci10aXRsZSB7CiAgZm9udC1zaXplOiAxLjI1cmVtICFpbXBvcnRhbnQ7CiAgZm9udC13ZWlnaHQ6IGJvbGQ7Cn0KCi52LWFwcGxpY2F0aW9uLS1pcy1sdHIgLnYtbGlzdC1pdGVtX19hY3Rpb246Zmlyc3QtY2hpbGQsCi52LWFwcGxpY2F0aW9uLS1pcy1sdHIgLnYtbGlzdC1pdGVtX19pY29uOmZpcnN0LWNoaWxkIHsKICBtYXJnaW4tcmlnaHQ6IDE2cHggIWltcG9ydGFudDsKfQoKLnYtdG9vbGJhcl9fY29udGVudCB7CiAgaGVpZ2h0OiA2NHB4ICFpbXBvcnRhbnQ7Cn0KCi52LWRhdGEtdGFibGUtaGVhZGVyIHsKfQoKLnRoZW1lLS1saWdodC52LWRhdGEtdGFibGUgPiAudi1kYXRhLXRhYmxlX193cmFwcGVyID4gdGFibGUgPiB0aGVhZCA+IHRyOmxhc3QtY2hpbGQgPiB0aCB7CiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsKICB3aGl0ZS1zcGFjZTogbm93cmFwOwp9Cgoudi1kYXRhLXRhYmxlID4gLnYtZGF0YS10YWJsZV9fd3JhcHBlciA+IHRhYmxlID4gdGJvZHkgPiB0ciB7CiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQgIWltcG9ydGFudDsKCiAgJiA+IHRkIHsKICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7CiAgfQoKICAmID4gdGQ6Zmlyc3QtY2hpbGQgewogICAgLy9mb250LXdlaWdodDogYm9sZCAhaW1wb3J0YW50OwogIH0KfQoKLnYtZGF0YS10YWJsZSA+IC52LWRhdGEtdGFibGVfX3dyYXBwZXIgPiB0YWJsZSA+IHRib2R5ID4gdHIgPiB0aCwKLnYtZGF0YS10YWJsZSA+IC52LWRhdGEtdGFibGVfX3dyYXBwZXIgPiB0YWJsZSA+IHRoZWFkID4gdHIgPiB0aCwKLnYtZGF0YS10YWJsZSA+IC52LWRhdGEtdGFibGVfX3dyYXBwZXIgPiB0YWJsZSA+IHRmb290ID4gdHIgPiB0aCwKLnYtZGF0YS10YWJsZSA+IC52LWRhdGEtdGFibGVfX3dyYXBwZXIgPiB0YWJsZSA+IHRib2R5ID4gdHIgPiB0ZCB7CiAgZm9udC1zaXplOiAxcmVtICFpbXBvcnRhbnQ7Cn0KCi52LWRhdGEtZm9vdGVyIHsKICBmb250LXNpemU6IDFyZW0gIWltcG9ydGFudDsKfQoKLnYtdG9vbGJhcl9fdGl0bGUgewogIGZvbnQtd2VpZ2h0OiBib2xkICFpbXBvcnRhbnQ7Cn0KCi52LWFwcC1iYXJfX25hdi1pY29uIHsKICBtYXJnaW4tbGVmdDogMCAhaW1wb3J0YW50Owp9Cgoudi10b29sYmFyX190aXRsZTpub3QoOmZpcnN0LWNoaWxkKSB7CiAgbWFyZ2luLWxlZnQ6IDEwcHggIWltcG9ydGFudDsKfQoKQG1lZGlhIChtaW4td2lkdGg6IDk2MHB4KSB7CiAgLnYtYXBwLWJhcl9fbmF2LWljb24gewogICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OwogIH0KCiAgLnYtdG9vbGJhcl9fdGl0bGU6bm90KDpmaXJzdC1jaGlsZCkgewogICAgcGFkZGluZy1sZWZ0OiAwICFpbXBvcnRhbnQ7CiAgICBtYXJnaW4tbGVmdDogMCAhaW1wb3J0YW50OwogIH0KfQoK"},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2XA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <v-app v-if=\"state === 'success'\" class=\"app\">\n    <EditDialog\n        v-model=\"passwordDialog\"\n        save-button-text=\"保存\"\n        title=\"修改密码\"\n        v-if=\"user\"\n        event-name=\"i-user\"\n    >\n      <template v-slot:form=\"{ onSave, onError, needSave, needReset }\">\n        <ChangePasswordForm\n            :project-id=\"projectId\"\n            :item-id=\"user.id\"\n            @save=\"onSave\"\n            @error=\"onError\"\n            :need-save=\"needSave\"\n            :need-reset=\"needReset\"\n        />\n      </template>\n    </EditDialog>\n\n    <EditDialog\n        v-model=\"userDialog\"\n        save-button-text=\"保存\"\n        title=\"新建用户\"\n        v-if=\"user\"\n        event-name=\"i-user\"\n    >\n      <template v-slot:form=\"{ onSave, onError, needSave, needReset }\">\n        <UserForm\n            :project-id=\"projectId\"\n            :item-id=\"user.id\"\n            @save=\"onSave\"\n            @error=\"onError\"\n            :need-save=\"needSave\"\n            :need-reset=\"needReset\"\n        />\n      </template>\n    </EditDialog>\n\n    <EditDialog\n        v-model=\"taskLogDialog\"\n        save-button-text=\"Delete\"\n        :max-width=\"1000\"\n        :hide-buttons=\"true\"\n        @close=\"onTaskLogDialogClosed()\"\n    >\n      <template v-slot:title={}>\n        <div class=\"text-truncate\" style=\"max-width: calc(100% - 36px);\">\n          <router-link\n              class=\"breadcrumbs__item breadcrumbs__item--link\"\n              :to=\"`/project/${projectId}/templates/${template ? template.id : null}`\"\n              @click=\"taskLogDialog = false\"\n          >{{ template ? template.alias : null }}\n          </router-link>\n          <v-icon>mdi-chevron-right</v-icon>\n          <span class=\"breadcrumbs__item\">Task #{{ task ? task.id : null }}</span>\n        </div>\n\n        <v-spacer></v-spacer>\n        <v-btn\n            icon\n            @click=\"taskLogDialog = false; onTaskLogDialogClosed()\"\n        >\n          <v-icon>mdi-close</v-icon>\n        </v-btn>\n      </template>\n      <template v-slot:form=\"{}\">\n        <TaskLogView :project-id=\"projectId\" :item-id=\"task ? task.id : null\"/>\n      </template>\n    </EditDialog>\n\n    <EditDialog\n        v-model=\"newProjectDialog\"\n        save-button-text=\"创建\"\n        title=\"新项目\"\n        event-name=\"i-project\"\n    >\n      <template v-slot:form=\"{ onSave, onError, needSave, needReset }\">\n        <ProjectForm\n            item-id=\"new\"\n            @save=\"onSave\"\n            @error=\"onError\"\n            :need-save=\"needSave\"\n            :need-reset=\"needReset\"\n        />\n      </template>\n    </EditDialog>\n\n    <v-snackbar\n        v-model=\"snackbar\"\n        :color=\"snackbarColor\"\n        :timeout=\"3000\"\n        top\n    >\n      {{ snackbarText }}\n      <v-btn\n          text\n          @click=\"snackbar = false\"\n      >\n        Close\n      </v-btn>\n    </v-snackbar>\n\n    <v-navigation-drawer\n        app\n        dark\n        color=\"#005057\"\n        fixed\n        width=\"260\"\n        v-model=\"drawer\"\n        mobile-breakpoint=\"960\"\n        v-if=\"$route.path.startsWith('/project/')\"\n    >\n      <v-menu bottom max-width=\"235\" max-height=\"100%\" v-if=\"project\">\n        <template v-slot:activator=\"{ on, attrs }\">\n          <v-list class=\"pa-0 overflow-y-auto\">\n            <v-list-item\n                key=\"project\"\n                class=\"app__project-selector\"\n                v-bind=\"attrs\"\n                v-on=\"on\"\n            >\n              <v-list-item-icon>\n                <v-avatar\n                    :color=\"getProjectColor(project)\"\n                    size=\"24\"\n                    style=\"font-size: 13px; font-weight: bold;\"\n                >\n                  <span class=\"white--text\">{{ getProjectInitials(project) }}</span>\n                </v-avatar>\n              </v-list-item-icon>\n\n              <v-list-item-content>\n                <v-list-item-title class=\"app__project-selector-title\">\n                  {{ project.name }}\n                </v-list-item-title>\n              </v-list-item-content>\n\n              <v-list-item-icon>\n                <v-icon>mdi-chevron-down</v-icon>\n              </v-list-item-icon>\n            </v-list-item>\n          </v-list>\n        </template>\n        <v-list>\n          <v-list-item\n              v-for=\"(item, i) in projects\"\n              :key=\"i\"\n              :to=\"`/project/${item.id}`\"\n              @click=\"selectProject(item.id)\"\n          >\n            <v-list-item-icon>\n              <v-avatar\n                  :color=\"getProjectColor(item)\"\n                  size=\"24\"\n                  style=\"font-size: 13px; font-weight: bold;\"\n              >\n                <span class=\"white--text\">{{ getProjectInitials(item) }}</span>\n              </v-avatar>\n            </v-list-item-icon>\n            <v-list-item-content>{{ item.name }}</v-list-item-content>\n          </v-list-item>\n\n          <v-list-item @click=\"newProjectDialog = true\">\n            <v-list-item-icon>\n              <v-icon>mdi-plus</v-icon>\n            </v-list-item-icon>\n\n            <v-list-item-content>\n              New project...\n            </v-list-item-content>\n          </v-list-item>\n        </v-list>\n      </v-menu>\n\n      <v-list class=\"pt-0\" v-if=\"!project\">\n        <v-list-item key=\"new_project\" :to=\"`/project/new`\">\n          <v-list-item-icon>\n            <v-icon>mdi-plus</v-icon>\n          </v-list-item-icon>\n\n          <v-list-item-content>\n            <v-list-item-title>New Project</v-list-item-title>\n          </v-list-item-content>\n        </v-list-item>\n      </v-list>\n\n      <v-list class=\"pt-0\" v-if=\"project\">\n        <v-list-item key=\"dashboard\" :to=\"`/project/${projectId}/history`\">\n          <v-list-item-icon>\n            <v-icon>mdi-view-dashboard</v-icon>\n          </v-list-item-icon>\n\n          <v-list-item-content>\n            <v-list-item-title>仪表盘</v-list-item-title>\n          </v-list-item-content>\n        </v-list-item>\n\n        <v-list-item key=\"templates\" :to=\"templatesUrl\">\n          <v-list-item-icon>\n            <v-icon>mdi-check-all</v-icon>\n          </v-list-item-icon>\n\n          <v-list-item-content>\n            <v-list-item-title>任务模板</v-list-item-title>\n          </v-list-item-content>\n        </v-list-item>\n\n        <v-list-item key=\"inventory\" :to=\"`/project/${projectId}/inventory`\">\n          <v-list-item-icon>\n            <v-icon>mdi-monitor-multiple</v-icon>\n          </v-list-item-icon>\n\n          <v-list-item-content>\n            <v-list-item-title>主机清单</v-list-item-title>\n          </v-list-item-content>\n        </v-list-item>\n\n        <v-list-item key=\"environment\" :to=\"`/project/${projectId}/environment`\">\n          <v-list-item-icon>\n            <v-icon>mdi-code-braces</v-icon>\n          </v-list-item-icon>\n\n          <v-list-item-content>\n            <v-list-item-title>运行环境</v-list-item-title>\n          </v-list-item-content>\n        </v-list-item>\n\n        <v-list-item key=\"keys\" :to=\"`/project/${projectId}/keys`\">\n          <v-list-item-icon>\n            <v-icon>mdi-key-change</v-icon>\n          </v-list-item-icon>\n\n          <v-list-item-content>\n            <v-list-item-title>密钥库</v-list-item-title>\n          </v-list-item-content>\n        </v-list-item>\n\n        <v-list-item key=\"repositories\" :to=\"`/project/${projectId}/repositories`\">\n          <v-list-item-icon>\n            <v-icon>mdi-git</v-icon>\n          </v-list-item-icon>\n\n          <v-list-item-content>\n            <v-list-item-title>剧本库</v-list-item-title>\n          </v-list-item-content>\n        </v-list-item>\n\n        <v-list-item key=\"team\" :to=\"`/project/${projectId}/team`\">\n          <v-list-item-icon>\n            <v-icon>mdi-account-multiple</v-icon>\n          </v-list-item-icon>\n\n          <v-list-item-content>\n            <v-list-item-title>团队</v-list-item-title>\n          </v-list-item-content>\n        </v-list-item>\n      </v-list>\n\n      <template v-slot:append>\n        <v-menu top max-width=\"235\" nudge-top=\"12\">\n          <template v-slot:activator=\"{ on, attrs }\">\n            <v-list class=\"pa-0\">\n              <v-list-item\n                  key=\"project\"\n                  v-bind=\"attrs\"\n                  v-on=\"on\"\n              >\n                <v-list-item-icon>\n                  <v-icon>mdi-account</v-icon>\n                </v-list-item-icon>\n\n                <v-list-item-content>\n                  <v-list-item-title>{{ user.name }}</v-list-item-title>\n                </v-list-item-content>\n              </v-list-item>\n            </v-list>\n          </template>\n\n          <v-list>\n            <v-list-item key=\"users\" to=\"/users\">\n              <v-list-item-icon>\n                <v-icon>mdi-account-multiple</v-icon>\n              </v-list-item-icon>\n\n              <v-list-item-content>\n                用户\n              </v-list-item-content>\n            </v-list-item>\n\n            <v-list-item key=\"edit\" @click=\"userDialog = true\">\n              <v-list-item-icon>\n                <v-icon>mdi-pencil</v-icon>\n              </v-list-item-icon>\n\n              <v-list-item-content>\n                编辑账户\n              </v-list-item-content>\n            </v-list-item>\n\n            <v-list-item key=\"password\" @click=\"passwordDialog = true\">\n              <v-list-item-icon>\n                <v-icon>mdi-lock</v-icon>\n              </v-list-item-icon>\n\n              <v-list-item-content>\n                修改密码\n              </v-list-item-content>\n            </v-list-item>\n\n            <v-list-item key=\"sign_out\" @click=\"signOut()\">\n              <v-list-item-icon>\n                <v-icon>mdi-exit-to-app</v-icon>\n              </v-list-item-icon>\n\n              <v-list-item-content>\n                退出\n              </v-list-item-content>\n            </v-list-item>\n          </v-list>\n        </v-menu>\n      </template>\n    </v-navigation-drawer>\n\n    <v-main>\n      <router-view :projectId=\"projectId\" :userId=\"user ? user.id : null\"></router-view>\n    </v-main>\n\n  </v-app>\n  <v-app v-else-if=\"state === 'loading'\">\n    <v-main>\n      <v-container\n          fluid\n          fill-height\n          align-center\n          justify-center\n          class=\"pa-0\"\n      >\n        <v-progress-circular\n            :size=\"70\"\n            color=\"primary\"\n            indeterminate\n        ></v-progress-circular>\n      </v-container>\n    </v-main>\n  </v-app>\n  <v-app v-else-if=\"state === 'error'\">\n    <v-main>\n      <v-container\n          fluid\n          flex-column\n          fill-height\n          align-center\n          justify-center\n          class=\"pa-0 text-center\"\n      >\n        <v-alert text color=\"error\" class=\"d-inline-block\">\n          <h3 class=\"headline\">\n            错误\n          </h3>\n          {{ snackbarText }}\n        </v-alert>\n        <div class=\"mb-6\">\n          <v-btn text color=\"blue darken-1\" @click=\"refreshPage()\">\n            <v-icon left>mdi-refresh</v-icon>\n            刷新页面\n          </v-btn>\n          <v-btn text color=\"blue darken-1\" @click=\"signOut()\">\n            <v-icon left>mdi-exit-to-app</v-icon>\n            重新登录\n          </v-btn>\n        </div>\n      </v-container>\n    </v-main>\n  </v-app>\n  <v-app v-else></v-app>\n</template>\n<style lang=\"scss\">\n.v-dialog > .v-card > .v-card__title {\n  flex-wrap: nowrap;\n  overflow: hidden;\n  & * {\n    white-space: nowrap;\n  }\n}\n\n.v-data-table tbody tr.v-data-table__expanded__content {\n  box-shadow: none !important;\n\n}\n\n.v-data-table a {\n  text-decoration-line: none;\n\n  &:hover {\n    text-decoration-line: underline;\n  }\n}\n\n.breadcrumbs__item--link {\n  text-decoration-line: none;\n\n  &:hover {\n    text-decoration-line: underline;\n  }\n}\n\n.breadcrumbs__separator {\n  padding: 0 10px;\n}\n\n.app__project-selector {\n  height: 64px;\n\n  .v-list-item__icon {\n    margin-top: 20px !important;\n  }\n}\n\n.app__project-selector-title {\n  font-size: 1.25rem !important;\n  font-weight: bold;\n}\n\n.v-application--is-ltr .v-list-item__action:first-child,\n.v-application--is-ltr .v-list-item__icon:first-child {\n  margin-right: 16px !important;\n}\n\n.v-toolbar__content {\n  height: 64px !important;\n}\n\n.v-data-table-header {\n}\n\n.theme--light.v-data-table > .v-data-table__wrapper > table > thead > tr:last-child > th {\n  text-transform: uppercase;\n  white-space: nowrap;\n}\n\n.v-data-table > .v-data-table__wrapper > table > tbody > tr {\n  background: transparent !important;\n\n  & > td {\n    white-space: nowrap;\n  }\n\n  & > td:first-child {\n    //font-weight: bold !important;\n  }\n}\n\n.v-data-table > .v-data-table__wrapper > table > tbody > tr > th,\n.v-data-table > .v-data-table__wrapper > table > thead > tr > th,\n.v-data-table > .v-data-table__wrapper > table > tfoot > tr > th,\n.v-data-table > .v-data-table__wrapper > table > tbody > tr > td {\n  font-size: 1rem !important;\n}\n\n.v-data-footer {\n  font-size: 1rem !important;\n}\n\n.v-toolbar__title {\n  font-weight: bold !important;\n}\n\n.v-app-bar__nav-icon {\n  margin-left: 0 !important;\n}\n\n.v-toolbar__title:not(:first-child) {\n  margin-left: 10px !important;\n}\n\n@media (min-width: 960px) {\n  .v-app-bar__nav-icon {\n    display: none !important;\n  }\n\n  .v-toolbar__title:not(:first-child) {\n    padding-left: 0 !important;\n    margin-left: 0 !important;\n  }\n}\n\n</style>\n\n<script>\nimport axios from 'axios';\nimport { getErrorMessage } from '@/lib/error';\nimport EditDialog from '@/components/EditDialog.vue';\nimport TaskLogView from '@/components/TaskLogView.vue';\nimport ProjectForm from '@/components/ProjectForm.vue';\nimport UserForm from '@/components/UserForm.vue';\nimport ChangePasswordForm from '@/components/ChangePasswordForm.vue';\nimport EventBus from '@/event-bus';\nimport socket from '@/socket';\n\nconst PROJECT_COLORS = [\n  'red',\n  'blue',\n  'orange',\n  'green',\n];\n\nexport default {\n  name: 'App',\n  components: {\n    ChangePasswordForm,\n    UserForm,\n    EditDialog,\n    TaskLogView,\n    ProjectForm,\n  },\n  data() {\n    return {\n      drawer: null,\n      user: null,\n      state: 'loading',\n      snackbar: false,\n      snackbarText: '',\n      snackbarColor: '',\n      projects: null,\n      newProjectDialog: null,\n      userDialog: null,\n      passwordDialog: null,\n\n      taskLogDialog: null,\n      task: null,\n      template: null,\n    };\n  },\n\n  watch: {\n    async projects(val) {\n      if (val.length === 0\n          && this.$route.path.startsWith('/project/')\n          && this.$route.path !== '/project/new') {\n        await this.$router.push({ path: '/project/new' });\n      }\n    },\n\n    async $route(val) {\n      if (val.query.t == null) {\n        this.taskLogDialog = false;\n      } else {\n        const taskId = parseInt(this.$route.query.t || '', 10);\n        if (taskId) {\n          EventBus.$emit('i-show-task', { taskId });\n        }\n      }\n    },\n  },\n\n  computed: {\n    projectId() {\n      return parseInt(this.$route.params.projectId, 10) || null;\n    },\n\n    project() {\n      return this.projects.find((x) => x.id === this.projectId);\n    },\n\n    isAuthenticated() {\n      return document.cookie.includes('semaphore=');\n    },\n\n    templatesUrl() {\n      let viewId = localStorage.getItem(`project${this.projectId}__lastVisitedViewId`);\n      if (viewId) {\n        viewId = parseInt(viewId, 10);\n        if (!Number.isNaN(viewId)) {\n          return `/project/${this.projectId}/views/${viewId}/templates`;\n        }\n      }\n      return `/project/${this.projectId}/templates`;\n    },\n  },\n\n  async created() {\n    if (!this.isAuthenticated) {\n      if (this.$route.path !== '/auth/login') {\n        await this.$router.push({ path: '/auth/login' });\n      }\n      this.state = 'success';\n      return;\n    }\n\n    try {\n      await this.loadData();\n      this.state = 'success';\n    } catch (err) {\n      EventBus.$emit('i-snackbar', {\n        color: 'error',\n        text: getErrorMessage(err),\n      });\n      this.state = 'error';\n      socket.stop();\n    }\n  },\n\n  mounted() {\n    EventBus.$on('i-snackbar', (e) => {\n      this.snackbar = true;\n      this.snackbarColor = e.color;\n      this.snackbarText = e.text;\n    });\n\n    EventBus.$on('i-account-change', async () => {\n      await this.loadUserInfo();\n    });\n\n    EventBus.$on('i-show-drawer', async () => {\n      this.drawer = true;\n    });\n\n    EventBus.$on('i-show-task', async (e) => {\n      if (parseInt(this.$route.query.t || '', 10) !== e.taskId) {\n        const query = { ...this.$route.query, t: e.taskId };\n        await this.$router.replace({ query });\n      }\n\n      this.task = (await axios({\n        method: 'get',\n        url: `/api/project/${this.projectId}/tasks/${e.taskId}`,\n        responseType: 'json',\n      })).data;\n\n      this.template = (await axios({\n        method: 'get',\n        url: `/api/project/${this.projectId}/templates/${this.task.template_id}`,\n        responseType: 'json',\n      })).data;\n\n      this.taskLogDialog = true;\n    });\n\n    EventBus.$on('i-open-last-project', async () => {\n      await this.trySelectMostSuitableProject();\n    });\n\n    EventBus.$on('i-user', async (e) => {\n      let text;\n\n      switch (e.action) {\n        case 'new':\n          text = `User ${e.item.name} created`;\n          break;\n        case 'edit':\n          text = `User ${e.item.name} saved`;\n          break;\n        case 'delete':\n          text = `User ${e.item.name} deleted`;\n          break;\n        default:\n          throw new Error('Unknown project action');\n      }\n\n      EventBus.$emit('i-snackbar', {\n        color: 'success',\n        text,\n      });\n\n      if (this.user && e.item.id === this.user.id) {\n        await this.loadUserInfo();\n      }\n    });\n\n    EventBus.$on('i-project', async (e) => {\n      let text;\n\n      const project = this.projects.find((p) => p.id === e.item.id) || e.item;\n      const projectName = project.name || `#${project.id}`;\n\n      switch (e.action) {\n        case 'new':\n          text = `Project ${projectName} created`;\n          break;\n        case 'edit':\n          text = `Project ${projectName} saved`;\n          break;\n        case 'delete':\n          text = `Project ${projectName} deleted`;\n          break;\n        default:\n          throw new Error('Unknown project action');\n      }\n\n      EventBus.$emit('i-snackbar', {\n        color: 'success',\n        text,\n      });\n\n      await this.loadProjects();\n\n      switch (e.action) {\n        case 'new':\n          await this.selectProject(e.item.id);\n          break;\n        case 'delete':\n          if (this.projectId === e.item.id && this.projects.length > 0) {\n            await this.selectProject(this.projects[0].id);\n          }\n          break;\n        default:\n          break;\n      }\n    });\n  },\n\n  methods: {\n    async onTaskLogDialogClosed() {\n      const query = { ...this.$route.query, t: undefined };\n      await this.$router.replace({ query });\n    },\n\n    async loadData() {\n      if (!socket.isRunning()) {\n        socket.start();\n      }\n\n      await this.loadUserInfo();\n      await this.loadProjects();\n\n      // try to find project and switch to it if URL not pointing to any project\n      if (this.$route.path === '/'\n          || this.$route.path === '/project'\n          || (this.$route.path.startsWith('/project/'))) {\n        await this.trySelectMostSuitableProject();\n      }\n\n      // display task dialog if query param t specified\n      if (this.$route.query.t) {\n        const taskId = parseInt(this.$route.query.t || '', 10);\n        if (taskId) {\n          EventBus.$emit('i-show-task', { taskId });\n        }\n      }\n    },\n\n    async trySelectMostSuitableProject() {\n      if (this.projects.length === 0) {\n        if (this.$route.path !== '/project/new') {\n          await this.$router.push({ path: '/project/new' });\n        }\n        return;\n      }\n\n      let projectId;\n\n      if (this.projectId) {\n        projectId = this.projectId;\n      }\n\n      if ((projectId == null || !this.projects.some((p) => p.id === projectId))\n          && localStorage.getItem('projectId')) {\n        projectId = parseInt(localStorage.getItem('projectId'), 10);\n      }\n\n      if (projectId == null || !this.projects.some((p) => p.id === projectId)) {\n        projectId = this.projects[0].id;\n      }\n\n      if (projectId != null) {\n        await this.selectProject(projectId);\n      }\n    },\n\n    async selectProject(projectId) {\n      localStorage.setItem('projectId', projectId);\n      if (this.projectId === projectId) {\n        return;\n      }\n      await this.$router.push({ path: `/project/${projectId}` });\n    },\n\n    async loadProjects() {\n      this.projects = (await axios({\n        method: 'get',\n        url: '/api/projects',\n        responseType: 'json',\n      })).data;\n    },\n\n    async loadUserInfo() {\n      if (!this.isAuthenticated) {\n        return;\n      }\n      this.user = (await axios({\n        method: 'get',\n        url: '/api/user',\n        responseType: 'json',\n      })).data;\n    },\n\n    getProjectColor(projectData) {\n      const projectIndex = this.projects.length\n          - this.projects.findIndex((p) => p.id === projectData.id);\n      return PROJECT_COLORS[projectIndex % PROJECT_COLORS.length];\n    },\n\n    getProjectInitials(projectData) {\n      const parts = projectData.name.split(/\\s/);\n      if (parts.length >= 2) {\n        return `${parts[0][0]}${parts[1][0]}`.toUpperCase();\n      }\n      return parts[0].substr(0, 2).toUpperCase();\n    },\n\n    async signOut() {\n      this.snackbar = false;\n      this.snackbarColor = '';\n      this.snackbarText = '';\n\n      socket.stop();\n\n      (await axios({\n        method: 'post',\n        url: '/api/auth/logout',\n        responseType: 'json',\n      }));\n\n      if (this.$route.path !== '/auth/login') {\n        await this.$router.push({ path: '/auth/login' });\n        this.state = 'success';\n      }\n    },\n\n    refreshPage() {\n      const { location } = document;\n      document.location = location;\n    },\n  },\n};\n</script>\n"]}]}