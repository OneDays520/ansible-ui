{"remainingRequest":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/src/components/TaskLink.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/src/components/TaskLink.vue","mtime":1638779901600},{"path":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpAaW1wb3J0ICd+dnVldGlmeS9zcmMvc3R5bGVzL3NldHRpbmdzL19jb2xvcnMuc2Nzcyc7CgoudGFzay1saW5rLXdpdGgtdG9vbHRpcCB7CiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgIWltcG9ydGFudDsKICB0ZXh0LWRlY29yYXRpb24tc3R5bGU6IGRhc2hlZCAhaW1wb3J0YW50OwogIHRleHQtZGVjb3JhdGlvbi1jb2xvcjogZ3JheSAhaW1wb3J0YW50Owp9CgphLnRhc2stbGluay13aXRoLXRvb2x0aXAgewogICY6aG92ZXIgewogICAgdGV4dC1kZWNvcmF0aW9uLXN0eWxlOiBzb2xpZCAhaW1wb3J0YW50OwogICAgdGV4dC1kZWNvcmF0aW9uLWNvbG9yOiBtYXAtZGVlcC1nZXQoJGJsdWUsICdkYXJrZW4tMicpICFpbXBvcnRhbnQ7CiAgfQp9Cgo="},{"version":3,"sources":["TaskLink.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"TaskLink.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <span>\n    <v-icon\n        v-if=\"status != null\"\n        small\n        class=\"mr-1\"\n        :color=\"statusColor\"\n    >mdi-{{ statusIcon }}\n    </v-icon>\n    <span v-if=\"disabled\">{{ label }}</span>\n    <v-tooltip\n        v-else\n        color=\"black\"\n        right\n        max-width=\"350\"\n        transition=\"fade-transition\"\n        :disabled=\"!tooltip\"\n    >\n      <template v-slot:activator=\"{ on, attrs }\">\n        <a\n            v-bind=\"attrs\"\n            v-on=\"on\"\n            @click=\"showTaskLog()\"\n            :class=\"{'task-link-with-tooltip': tooltip}\"\n        >{{ label }}</a>\n      </template>\n      <span>{{ tooltip }}</span>\n    </v-tooltip>\n  </span>\n</template>\n<style lang=\"scss\">\n\n@import '~vuetify/src/styles/settings/_colors.scss';\n\n.task-link-with-tooltip {\n  text-decoration: underline !important;\n  text-decoration-style: dashed !important;\n  text-decoration-color: gray !important;\n}\n\na.task-link-with-tooltip {\n  &:hover {\n    text-decoration-style: solid !important;\n    text-decoration-color: map-deep-get($blue, 'darken-2') !important;\n  }\n}\n\n</style>\n<script>\nimport EventBus from '@/event-bus';\n\nexport default {\n  props: {\n    label: String,\n    tooltip: String,\n    taskId: Number,\n    disabled: Boolean,\n    status: String,\n  },\n  computed: {\n    statusColor() {\n      switch (this.status) {\n        case 'success':\n          return 'success';\n        case 'error':\n          return 'red';\n        default:\n          return 'gray';\n      }\n    },\n    statusIcon() {\n      switch (this.status) {\n        case 'success':\n          return 'check';\n        case 'error':\n          return 'close';\n        default:\n          return 'clock-time-three-outline';\n      }\n    },\n  },\n  methods: {\n    showTaskLog() {\n      EventBus.$emit('i-show-task', {\n        taskId: this.taskId,\n      });\n    },\n  },\n};\n</script>\n"]}]}