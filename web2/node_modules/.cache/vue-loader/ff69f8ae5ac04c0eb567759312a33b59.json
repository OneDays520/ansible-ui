{"remainingRequest":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/src/views/project/Templates.vue?vue&type=template&id=674c7f33&xmlns%3Av-slot=http%3A%2F%2Fwww.w3.org%2F1999%2FXSL%2FTransform&","dependencies":[{"path":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/src/views/project/Templates.vue","mtime":1638860152195},{"path":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lx/go/src/github.com/ansible-semaphore/semaphore/web2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}