var assert = require('assert');
var Namespace = require('../../lib/api-elements').Namespace;
var namespace = new Namespace();
describe('Transition', function () {
    var Transition = namespace.elements.Transition;
    describe('#href', function () {
        it('can access href attribute via property', function () {
            var transition = new Transition();
            transition.attributes.set('href', '/');
            assert(transition.href instanceof namespace.elements.String);
            assert.equal(transition.href.toValue(), '/');
        });
        it('can set href attribute via property', function () {
            var transition = new Transition();
            transition.href = '/';
            var method = transition.attributes.get('href');
            assert(method instanceof namespace.elements.String);
            assert.equal(method.toValue(), '/');
        });
    });
    describe('#hrefVariables', function () {
        it('can access hrefVariables attribute via property', function () {
            var request = new HttpRequest();
            request.attributes.set('hrefVariables', {
                limit: 5
            });
            assert(request.hrefVariables instanceof namespace.elements.Object);
            assert.deepEqual(request.hrefVariables.valueOf(), {
                limit: 5
            });
        });
        it('can set href attribute via property', function () {
            var request = new HttpRequest();
            request.hrefVariables = {
                limit: 5
            };
            var hrefVariables = request.attributes.get('hrefVariables');
            assert(hrefVariables instanceof namespace.elements.Object);
            assert.deepEqual(hrefVariables.valueOf(), {
                limit: 5
            });
        });
    });
});
